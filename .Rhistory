family=binomial,
data=centauree_data, method="PQL/L")
Flowpredict1 <- predict(Flowglm1, newdata = fake_data)[,1]
# Add to fake_data
fake_data <- fake_data %>% mutate(CapituleNbr = round(Cptlpredict1),
SurvivalProbab = Survpredict1,
Growth = Growthpredict1,
FloweringProba = Flowpredict1)
view(fake_data)
source("~/Documents/Predict.R", echo=TRUE)
save(fake_data, file = "Prediction")
rm(list=ls())
library(knitr)
library(spaMM)
library(tidyverse)
library(splines)
library(SplinesUtils)
library(popbio)
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
centauree_data <- read.csv("donnesIPM_short.csv")
centauree_data_complet <- read.csv("donnesIPM.csv")
MatrixDim <- 50
#Forcer l'age maximal à 8
AgeMax <- 8
centauree_data$age1 <- ifelse(centauree_data$Stage1=="V",centauree_data$age0+1,NA)
centauree_data$age0[centauree_data$age0 > AgeMax] <- AgeMax
centauree_data$age1[centauree_data$age1 > AgeMax] <- AgeMax
spaMM.options(separation_max=70)
annees <- 1995:2022
populations <- c("Po","Au","Pe","E1","E2","Cr")
taille_range <- seq(0.5, 25, by = 0.5)
age_range <- 1:AgeMax
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = taille_range,
age0 = age_range
)
fake_data <- fake_data %>%
mutate(Nrw = row_number())
weightAgeFlrPool=NULL
for ( a in 1:AgeMax ) {
weightAgeFlrPool[a]= nrow(centauree_data[which(centauree_data$age0==a & centauree_data$Flowering0==1),])
}
fake_data <- load(file = "Prediction")
fake_data <- load("Prediction")
fake_data <- load("Prediction")
rm(list=ls())
library(knitr)
library(spaMM)
library(tidyverse)
library(splines)
library(SplinesUtils)
library(popbio)
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
centauree_data <- read.csv("donnesIPM_short.csv")
centauree_data_complet <- read.csv("donnesIPM.csv")
MatrixDim <- 50
#Forcer l'age maximal à 8
AgeMax <- 8
centauree_data$age1 <- ifelse(centauree_data$Stage1=="V",centauree_data$age0+1,NA)
centauree_data$age0[centauree_data$age0 > AgeMax] <- AgeMax
centauree_data$age1[centauree_data$age1 > AgeMax] <- AgeMax
spaMM.options(separation_max=70)
fake_data <- load(file = "Prediction")
view(fake_data)
fake_data <- load(file = "Prediction1")
save(fake_data, file = "Prediction.csv")
fake_data <- load(file = "Prediction.csv")
fake_data <- load(Prediction.csv)
fake_data <- load("Prediction.csv")
####### Creation of a fake data set with responses predicted by the models ####
#### Initialization
library(spaMM)
library(tidyverse)
library(splines)
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
centauree_data <- read.csv("donnesIPM_short.csv")
centauree_data_complet <- read.csv("donnesIPM.csv")
#Supprimer plantes dont l'age est inconnu
centauree_data <- centauree_data[!is.na(centauree_data$age0), ]
centauree_data$age1 <- ifelse(centauree_data$Stage1=="V",centauree_data$age0+1,NA)
#Forcer l'age maximal à 8
length(centauree_data$age0[centauree_data$age0 >= 8])
centauree_data$age0[centauree_data$age0 > 8] <- 8
spaMM.options(separation_max=70)
## Creation of fake data
AgeMax <- 8
annees <- 1995:2022
populations <- c("Po","Au","Pe","E1","E2","Cr")
taille_range <- seq(0.5, 25, by = 0.5)
age_range <- 1:AgeMax
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = taille_range,
age0 = age_range)
## Add predicted responses
# Fecondity
cptldata <- centauree_data[!is.na(centauree_data$Cptl0),]
cptldata <- cptldata[!cptldata$Flowering0==0,]
Cptlglm1 <- fitme(Cptl0 ~ 1 + Size0Mars,
data=cptldata)
Cptlpredict1 <- predict(Cptlglm1, newdata = fake_data)[,1]
# Survival Probability
survdata <- centauree_data[centauree_data$Flowering0!=1,]
Survglm1 <- fitme(SurvieMars ~ 1+ bs(Size0Mars,df=5,degree=3) + bs(age0,degree=3,knots = 6.5)+ (Size0Mars|year) + (age0|Pop) ,
family=binomial,
data=survdata,
method="PQL/L")
Survpredict1 <- predict(Survglm1, newdata = fake_data)[,1]
# Growth
growthdata <- centauree_data[!is.na(centauree_data$Size1Mars), ]
growthdata <- growthdata[growthdata$Size1Mars != 0, ]
growthdata <- growthdata %>%
mutate(growthrate=Size1Mars/Size0Mars)
Growthglm1 <- fitme(growthrate ~ 1 + bs(Size0Mars,df =5,degree=3) + bs(age0,df=3,degree=3) + (Size0Mars + age0|year) + (Size0Mars|Pop),
data=growthdata,
resid.model = ~ 1)
Growthpredict1 <- predict(Growthglm1, newdata = fake_data)[,1]
# Flowering Probability
Flowglm1 <- fitme(Flowering0 ~  1 + poly(Size0Mars,3) + poly(age0,2) + (age0|Pop),
family=binomial,
data=centauree_data, method="PQL/L")
Flowpredict1 <- predict(Flowglm1, newdata = fake_data)[,1]
# Add to fake_data
fake_data <- fake_data %>% mutate(CapituleNbr = round(Cptlpredict1),
SurvivalProbab = Survpredict1,
Growth = Growthpredict1,
FloweringProba = Flowpredict1)
save(fake_data, file = "Prediction.csv")
fake <- read_csv("Prediction.csv")
View(fake)
fake <- read_csv2("Prediction.csv")
?save
save(fake_data, file = "Prediction")
read("Prediction")
load("Prediction")
fake_data
typeof(fake_data)
?load
load("Prediction")
View(fake_data)
View(fake_data)
fake_data
fake_data[fake_data$age0==1 & fake_data$Size0Mars==10,]
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10,]
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10]
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10][1]
numbofcap <- function(x,a) {
sortie <- fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10]
sortie2=aggregate(sortie,list(fake_data$Size0Mars),mean)
return(matrix(sortie2$V1,MatrixDim,MatrixDim,byrow = T ))
}
numbofcap(10,4)
fake_data$Size0Mars
list(fake_data$Size0Mars)
rm(list=ls())
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
library(popbio)
library(spaMM)
AgeMax=8
RecrRate=0.407 #recruitment rate
MatrixDim=50 #size of matrices for integration
#import
Dataglob=read.csv("donnesIPM.csv") #entire dataset
Datashort=read.csv("donnesIPM_short.csv") #same without seedlings
#Group plants >= AgeMax
Datashort$age0[Datashort$age0>=AgeMax]=AgeMax
Datashort$age1[Datashort$age1>=AgeMax]=AgeMax
Dataglob$age0[Dataglob$age0>=AgeMax]=AgeMax
Dataglob$age1[Dataglob$age1>=AgeMax]=AgeMax
#Add square(size)
Datashort$s2=(Datashort$Size0Mars)^2
#Construct fake dataset that will be used to integrate
year=unique(Datashort$year)
Pop=unique(Datashort$Pop)
Pop=gl(6,length(year),labels = Pop)
rer=data.frame(Pop,year)
rer$Index=1:(length(year)*6)
fake=do.call("rbind", replicate(MatrixDim, rer, simplify = FALSE))
fake=fake[order(fake$Index),]
fake$Size0Mars=NA
fake$age0=NA
rm(rer, Pop, year)
weightAgeFlrPool=NULL
for ( a in 1:AgeMax )
{
weightAgeFlrPool[a]= nrow(Datashort[which(Datashort$age0==a & Datashort$Flowering0==1),])
}
DatIpm=Dataglob[which(Dataglob$Size0Mars ==0 & Dataglob$Size1Mars !=0),]
DatIpm=Datashort[which(Datashort$age0 ==1),]
sizeSeedl=unique(DatIpm$Size1Mars[order(DatIpm$Size1Mars)])
vv=DatIpm$Size1Mars #Seedling size
Den=NULL
Width=NULL
UNIQ=unique(vv)
UNIQ=UNIQ[order(UNIQ)]
for ( i in 1:length(UNIQ))
{
Den[i]=length(vv[which(vv==sizeSeedl[i])])/length(vv)
Width[i]=length(vv[which(vv==sizeSeedl[i])]) #Number of observations for each size
}
dens=rep(Den,Width)
gg1=lm(log(1/dens)~rep(sizeSeedl,Width))
densSeedl=function(y,intervalle)
{   miny=min(y)
maxy=max(y)
SeedlgSize=exp(log(coef(gg1)[2])-y*coef(gg1)[2])/(exp(-coef(gg1)[2]*(miny-intervalle/2))-exp(-coef(gg1)[2]*(maxy+intervalle/2)))
return(SeedlgSize)
}
numbofcap=function(x,a) {
fake$age0=a
fake$Size0Mars=unique(x)
sortie=predict(CptlLm0, fake)
sortie2=aggregate(sortie,list(fake$Size0Mars),mean)
return(matrix(sortie2$V1,MatrixDim,MatrixDim,byrow = T ))
}
numbofcap(10,4)
SurvData=Datashort[Datashort$Flowering0!=1,]
spaMM.options(separation_max=70)
#Fecundity
CptlLm0=fitme(Cptl0~ Size0Mars, data = Datashort[which(Datashort$Flowering0!=0),])
numbofcap=function(x,a) {
fake$age0=a
fake$Size0Mars=unique(x)
sortie=predict(CptlLm0, fake)
sortie2=aggregate(sortie,list(fake$Size0Mars),mean)
return(matrix(sortie2$V1,MatrixDim,MatrixDim,byrow = T ))
}
numbofcap(10,4)
a <- numbofcap(10,4)
?aggregate
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10]
load("Prediction")
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
load("Prediction")
load("Prediction")
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10]
dim(fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10])
length(fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10])
rm(list=ls())
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
library(popbio)
library(spaMM)
AgeMax=8
RecrRate=0.407 #recruitment rate
MatrixDim=50 #size of matrices for integration
#import
Dataglob=read.csv("donnesIPM.csv") #entire dataset
Datashort=read.csv("donnesIPM_short.csv") #same without seedlings
#Group plants >= AgeMax
Datashort$age0[Datashort$age0>=AgeMax]=AgeMax
Datashort$age1[Datashort$age1>=AgeMax]=AgeMax
Dataglob$age0[Dataglob$age0>=AgeMax]=AgeMax
Dataglob$age1[Dataglob$age1>=AgeMax]=AgeMax
#Add square(size)
Datashort$s2=(Datashort$Size0Mars)^2
#Construct fake dataset that will be used to integrate
year=unique(Datashort$year)
Pop=unique(Datashort$Pop)
Pop=gl(6,length(year),labels = Pop)
rer=data.frame(Pop,year)
rer$Index=1:(length(year)*6)
fake=do.call("rbind", replicate(MatrixDim, rer, simplify = FALSE))
fake=fake[order(fake$Index),]
fake$Size0Mars=NA
fake$age0=NA
rm(rer, Pop, year)
weightAgeFlrPool=NULL
for ( a in 1:AgeMax )
{
weightAgeFlrPool[a]= nrow(Datashort[which(Datashort$age0==a & Datashort$Flowering0==1),])
}
DatIpm=Dataglob[which(Dataglob$Size0Mars ==0 & Dataglob$Size1Mars !=0),]
DatIpm=Datashort[which(Datashort$age0 ==1),]
sizeSeedl=unique(DatIpm$Size1Mars[order(DatIpm$Size1Mars)])
vv=DatIpm$Size1Mars #Seedling size
Den=NULL
Width=NULL
UNIQ=unique(vv)
UNIQ=UNIQ[order(UNIQ)]
for ( i in 1:length(UNIQ))
{
Den[i]=length(vv[which(vv==sizeSeedl[i])])/length(vv)
Width[i]=length(vv[which(vv==sizeSeedl[i])]) #Number of observations for each size
}
dens=rep(Den,Width)
gg1=lm(log(1/dens)~rep(sizeSeedl,Width))
densSeedl=function(y,intervalle)
{   miny=min(y)
maxy=max(y)
SeedlgSize=exp(log(coef(gg1)[2])-y*coef(gg1)[2])/(exp(-coef(gg1)[2]*(miny-intervalle/2))-exp(-coef(gg1)[2]*(maxy+intervalle/2)))
return(SeedlgSize)
}
SurvData=Datashort[Datashort$Flowering0!=1,]
spaMM.options(separation_max=70)
#Fecundity
CptlLm0=fitme(Cptl0~ Size0Mars, data = Datashort[which(Datashort$Flowering0!=0),])
numbofcap=function(x,a) {
fake$age0=a
fake$Size0Mars=unique(x)
sortie=predict(CptlLm0, fake)
sortie2=aggregate(sortie,list(fake$Size0Mars),mean)
return(matrix(sortie2$V1,MatrixDim,MatrixDim,byrow = T ))
}
fake$age0=1
fake$Size0Mars=unique(10)
sortie=predict(CptlLm0, fake)
sortie2=aggregate(sortie,list(fake$Size0Mars),mean)
View(sortie)
View(sortie2)
matrix(sortie2$V1,MatrixDim,MatrixDim,byrow = T )
rm(list=ls())
library(knitr)
library(spaMM)
library(tidyverse)
library(splines)
library(SplinesUtils)
library(popbio)
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
centauree_data <- read.csv("donnesIPM_short.csv")
centauree_data_complet <- read.csv("donnesIPM.csv")
MatrixDim <- 50
#Forcer l'age maximal à 8
AgeMax <- 8
centauree_data$age1 <- ifelse(centauree_data$Stage1=="V",centauree_data$age0+1,NA)
centauree_data$age0[centauree_data$age0 > AgeMax] <- AgeMax
centauree_data$age1[centauree_data$age1 > AgeMax] <- AgeMax
spaMM.options(separation_max=70)
weightAgeFlrPool=NULL
for ( a in 1:AgeMax ) {
weightAgeFlrPool[a]= nrow(centauree_data[which(centauree_data$age0==a & centauree_data$Flowering0==1),])
}
plantule_data <- centauree_data_complet[centauree_data_complet$age0==1,] %>%
filter(!is.na(age0))
n_plt <- length(plantule_data$Nrw)
sizeSeedl <- unique(plantule_data$Size0Mars[order(plantule_data$Size0Mars)])
Width <-NULL
Den <- NULL
for (i in 1:length(sizeSeedl)){
# Number of observations for each size
Width[i] <- length(unique(plantule_data$Nrw[plantule_data$Size0Mars==sizeSeedl[i]]))
# Frequency of each size
Den[i] <- Width[i]/n_plt
}
Width
Den
dens <- rep(Den,Width)
# densSeedl=function(y,intervalle)
# {   miny=min(y)
#   maxy=max(y)
#   SeedlgSize=exp(log(coef(gg1)[2])-y*coef(gg1)[2])/(exp(-coef(gg1)[2]*(miny-intervalle/2))-exp(-coef(gg1)[2]*(maxy+intervalle/2)))
#   return(SeedlgSize)
# }
load("Prediction")
load("Prediction")
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10]
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10][1]
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10][1]-1
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10][,1]
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10][1,]
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10][1][1]
fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10][[1]]
numbofcap <- function(x,a) {
sortie <- fake_data$CapituleNbr[fake_data$age0==1 & fake_data$Size0Mars==10][[1]]
return(matrix(sortie,MatrixDim,MatrixDim,byrow = T ))
}
numbofcap(10,4)
View(centauree_data_complet)
centauree_data_complet <- read.csv("donnesIPM.csv")
View(centauree_data_complet)
load("Nbredecapitules")
capi <- read("Nbredecapitules")
capi <- read.table("Nbredecapitules")
View(capi)
capi <- read.table("Nbredecapitules")
cptl_data <- centauree_data_complet[!centauree_data_complet$Flowering0==0,]
capi <- read.table("Nbredecapitules")
cptl_data <- centauree_data_complet[!centauree_data_complet$Flowering0==0,]
Cptlglm1 <- fitme(Cptl0 ~ 1 + Size0Mars,
data=cptl_data)
# NbrCptl = -3.769 + 2.683*Size0Mars
cptl_data_predi <- cptl_data %>%
mutate(Cptl0 = ifelse(is.na(Cptl0), round(-3.769+2.683*Size0Mars), Cptl0))
plt <- centauree_data_complet %>%
filter(age0==1) %>%
group_by(Quadrat,year,Pop) %>%
summarize(NombrePlantules = sum(age0))
cptl <- cptl_data_predi %>%
group_by(Quadrat,year,Pop) %>%
summarize(NombresCapitules = sum(Cptl0))
Estb <- inner_join(plt,cptl, by=join_by(Quadrat,year,Pop))
summary(Estb)
Estb <- Estb %>% mutate(EstbRate=rep(NA)) %>%
arrange(Quadrat)
for (i in 2:length(Estb$Quadrat)){
if (Estb$Quadrat[i]!=Estb$Quadrat[i-1]){next}
if (Estb$year[i]!=Estb$year[i-1]+1){next}
Estb$EstbRate[i] <- Estb$NombrePlantules[i]/Estb$NombresCapitules[i-1]
}
view(Estb)
View(cptl)
typeof(capi)
capi <- as.data.frame(capi)
capi %>% janitor::clean_names
capi %>% janitor::clean_names()
?levels
?rotate
glimpse(capi)
capi %>% group_by(X1994)
for (i in 1:29){names(capi)[i] <- paste(centauree_data$year[i-1])}
for (i in 1:28){names(capi)[i] <- paste(centauree_data$year[i-1])}
centauree_data$year[i-1]
centauree_data$year
centauree_data$year[[1]]
centauree_data$year[[2]]
centauree_data$year[1,1]
dim(centauree_data$year)
length(centauree_data$year)
Ye <- c("1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022")
capi <- read.table("Nbredecapitules")
for (i in 1:29){names(capi)[i] <- paste(Ye[i])}
capi
View(capi)
capi <- capi %>% mutate(year=Ye)
capi2 <- mutate(year=Ye)
capi2 <- data_frame()
capi2 <- tibble()
capi2 <- tibble(year=Ye)
capi2 <- tibble(year=Ye,
Quadrat=capi$Quadrat)
capi2 <- tibble(year=NA,
Quadrat=capi$Quadrat)
View(capi2)
capi2 <- tibble(year=NA,
NombreCapitules=NA
Quadrat=capi$Quadrat)
capi2 <- tibble(year=NA,
NombreCapitules=NA,
Quadrat=capi$Quadrat)
rm(list=ls())
library(knitr)
library(spaMM)
library(tidyverse)
library(splines)
library(patchwork)
library(SplinesUtils)
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
centauree_data <- read.csv("donnesIPM_short.csv")
centauree_data_complet <- read.csv("donnesIPM.csv")
#Supprimer plantes dont l'age est inconnu
centauree_data <- centauree_data[!is.na(centauree_data$age0), ]
centauree_data$age1 <- ifelse(centauree_data$Stage1=="V",centauree_data$age0+1,NA)
#Forcer l'age maximal à 8
length(centauree_data$age0[centauree_data$age0 >= 8])
centauree_data$age0[centauree_data$age0 > 8] <- 8
spaMM.options(separation_max=70)
annees <- 1995:2022
populations <- c("Po","Au","Pe","E1","E2","Cr")
taille_range <- seq(0.5, 25, by = 0.5)
age_range <- 1:8
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = taille_range,
age0 = age_range
)
fake_data <- fake_data %>%
mutate(Nrw = row_number())
extractBIC <- function(fit, n){
extractAIC(fit)[[2]]+(log(n)-2)*DoF(fit)[[3]]
}
survdata <- centauree_data[centauree_data$Flowering0!=1,]
# survdata$SurvieMars[survdata$age0==7][1:15] <- 0
survdata %>%
group_by(Size0Mars) %>%
mutate(survivalProba = sum(SurvieMars, na.rm = TRUE) / n()) %>%
ggplot(aes(x = Size0Mars, y = SurvieMars)) +
geom_count(alpha = 0.6) +  # Points dimensionnés selon la fréquence
geom_point(aes(y = survivalProba), color = "red", size = 0.5) +
geom_line(aes(y = survivalProba), color = "red") +
labs(title = "Relation entre la taille et la survie",
x = "Taille",
y = "Survie") +
ylim(0, 1) +
theme_minimal()
survdata %>%
group_by(age0) %>%
mutate(survivalProba = sum(SurvieMars, na.rm = TRUE) / n()) %>%
ggplot(aes(x = age0, y = SurvieMars)) +
geom_count(alpha = 0.6) +  # Points dimensionnés selon la fréquence
geom_point(aes(x = age0, y = survivalProba), color = "red", size = 1) +
geom_line(aes(x = age0, y = survivalProba), color = "red") +
labs(title = "Relation entre l'age et la survie",
x = "age",
y = "Survie") +
ylim(0, 1) +
theme_minimal()
Survglm1 <- fitme(SurvieMars ~ 1+ bs(Size0Mars,df=5,degree=3) + bs(age0,degree=3,knots = 6.5)+ (Size0Mars|year) + (age0|Pop) ,
family=binomial,
data=survdata,
method="PQL/L")
# Survglm12 <- fitme(SurvieMars ~ 1+ bs(Size0Mars,df=5,degree=3) + bs(age0,degree=3,knots = 4.5)+ (Size0Mars|year) + (age0|Pop) ,
#                  family=binomial,
#                  data=survdata,
#                  method="PQL/L")
Survglm2 <- fitme(SurvieMars ~ 1 + bs(Size0Mars,df=5,degree=3) + bs(age0,degree=3,knots = 6.5)
+ (Size0Mars + age0|year) + (age0|Pop) ,
family=binomial,
data=survdata,
method="PQL/L")
