Survpredict4 <- predict(Survglm4, newdata = fake_data)[,1]
Survpredict5 <- predict(Survglm5, newdata = fake_data)[,1]
plot_survie <- function(data = fake_data, prediction, var, c1, valc1 = 1, c2, valc2 = "Au", fact, mindat, maxdat) {
data %>%
mutate(surv_predi = prediction) %>%
filter(!!sym(c1) == valc1, !!sym(c2) == valc2) %>%
ggplot(aes(x = .data[[var]], y = surv_predi)) +
geom_vline(xintercept=maxdat, lty="dotted")+
geom_vline(xintercept=mindat, lty="dotted")+
geom_line(aes(color = as.factor(.data[[fact]]))) +
theme_minimal() +
ylim(0, 1)
}
var <- "Size0Mars"
c1 <- "age0"
valc1 <- 1
c2 <- "Pop"
valc2 <- "Au"
fact <- "year"
maxdat <- max(centauree_data$Size0Mars[centauree_data$age0==valc1])
mindat <- min(centauree_data$Size0Mars[centauree_data$age0==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
valc1 <- 3
maxdat <- max(centauree_data$Size0Mars[centauree_data$age0==valc1])
mindat <- min(centauree_data$Size0Mars[centauree_data$age0==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
valc1 <- 8
maxdat <- max(centauree_data$Size0Mars[centauree_data$age0==valc1])
mindat <- min(centauree_data$Size0Mars[centauree_data$age0==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
var <- "Size0Mars"
c1 <- "age0"
valc1 <- 1
c2 <- "Pop"
valc2 <- "Au"
fact <- "year"
maxdat <- max(centauree_data$Size0Mars[centauree_data$age0==valc1])
mindat <- min(centauree_data$Size0Mars[centauree_data$age0==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
valc1 <- 3
maxdat <- max(centauree_data$Size0Mars[centauree_data$age0==valc1])
mindat <- min(centauree_data$Size0Mars[centauree_data$age0==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
valc1 <- 8
maxdat <- max(centauree_data$Size0Mars[centauree_data$age0==valc1])
mindat <- min(centauree_data$Size0Mars[centauree_data$age0==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
var <- "age0"
c1 <- "Size0Mars"
valc1 <- 1
c2 <- "Pop"
valc2 <- "Au"
fact <- "year"
maxdat <- max(centauree_data$age0[centauree_data$Size0Mars==valc1])
mindat <- min(centauree_data$age0[centauree_data$Size0Mars==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
valc1 <- 5
maxdat <- max(centauree_data$age0[centauree_data$Size0Mars==valc1])
mindat <- min(centauree_data$age0[centauree_data$Size0Mars==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
valc1 <- 10
maxdat <- max(centauree_data$age0[centauree_data$Size0Mars==valc1])
mindat <- min(centauree_data$age0[centauree_data$Size0Mars==valc1])
wrap_plots(
plot_survie(prediction = Survpredict1, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict2, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict3, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict4, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat),
plot_survie(prediction = Survpredict5, var=var, c1=c1, valc1=valc1, c2=c2, valc2=valc2, fact=fact, maxdat = maxdat, mindat = mindat)
)
Survglm1
Survglm1
Survglm2
plantule_data <- centauree_data_complet[centauree_data_complet$age0==1,]
# Taille des plantules / année
plantule_data %>%
ggplot(aes(x = year, y = Size0Mars)) +
geom_count(alpha=0.6) +
labs(x = "Année",
y = "Taille des plantules") +
theme_minimal()
# Taille des plantules / population
plantule_data %>%
ggplot(aes(x = Pop, y = Size0Mars)) +
geom_count(alpha=0.6) +
labs(x = "Population",
y = "Taille des plantules") +
theme_minimal()
Pltglm1 <- fitme(Size0Mars ~ 1 + (1|year) + (1|Pop) + (1|Pop:year),
data=plantule_data)
Pltglm2 <- fitme(Size0Mars ~ 1 + (1|Pop) + (1|Pop:year),
data=plantule_data)
Pltglm3 <- fitme(Size0Mars ~ 1 + (1|Pop:year),
data=plantule_data)
Pltglm4 <- fitme(Size0Mars ~ 1 + (1|year) + (1|Pop:year),
data=plantule_data)
Pltglm5 <- fitme(Size0Mars ~ 1 + (1|year) + (1|Pop),
data=plantule_data)
summary(Pltglm1)
summary(Pltglm2)
summary(Pltglm3)
summary(Pltglm4)
summary(Pltglm5)
Pltpredict1 <- predict(Pltglm1, newdata = fake_data)[,1]
Pltpredict2 <- predict(Pltglm2, newdata = fake_data)[,1]
Pltpredict3 <- predict(Pltglm3, newdata = fake_data)[,1]
Pltpredict4 <- predict(Pltglm4, newdata = fake_data)[,1]
Pltpredict5 <- predict(Pltglm5, newdata = fake_data)[,1]
plot_plantule <- function(data = fake_data, prediction, var, fact) {
data %>%
mutate(plt_predi = prediction) %>%
ggplot(aes(x = .data[[var]], y = plt_predi)) +
geom_line(aes(color = as.factor(.data[[fact]]))) +
labs(y="Taille des plantules")+
theme_minimal()
}
plot_plantule1 <- function(data = fake_data, prediction, var, fact) {
data %>%
mutate(plt_predi = prediction) %>%
ggplot(aes(x = .data[[var]], y = plt_predi)) +
geom_point(aes(color = as.factor(.data[[fact]]))) +
labs(y="Taille des plantules")+
theme_minimal()
}
plot_plantule2 <- function(data = fake_data, prediction) {
data %>%
mutate(plt_predi = prediction) %>%
ggplot(aes(x = plt_predi)) +
geom_histogram() +
labs(x="Taille des plantules")+
theme_minimal()
}
var <- "year"
fact <- "Pop"
wrap_plots(
plot_plantule(prediction = Pltpredict1, var=var, fact=fact),
plot_plantule(prediction = Pltpredict2, var=var, fact=fact),
plot_plantule(prediction = Pltpredict3, var=var, fact=fact),
plot_plantule(prediction = Pltpredict4, var=var, fact=fact),
plot_plantule(prediction = Pltpredict5, var=var, fact=fact)
)
view(plantule_data)
plantule_data <- centauree_data_complet[centauree_data_complet$age0==1,]
View(plantule_data)
View(plantule_data[plantule_data$Pop=="Pe",])
Pltglm1 <- fitme(Size0Mars ~ 1 + (1|year) + (1|Pop) + (1|Pop:year),
data=plantule_data,
family = Gamma(log))
Pltglm2 <- fitme(Size0Mars ~ 1 + (1|Pop) + (1|Pop:year),
data=plantule_data,
family = Gamma(log))
Pltglm3 <- fitme(Size0Mars ~ 1 + (1|Pop:year),
data=plantule_data,
family = Gamma(log))
Pltglm4 <- fitme(Size0Mars ~ 1 + (1|year) + (1|Pop:year),
data=plantule_data,
family = Gamma(log))
Pltglm5 <- fitme(Size0Mars ~ 1 + (1|year) + (1|Pop),
data=plantule_data,
family = Gamma(log))
summary(Pltglm1)
summary(Pltglm2)
summary(Pltglm3)
summary(Pltglm4)
summary(Pltglm5)
Pltpredict1 <- predict(Pltglm1, newdata = fake_data)[,1]
Pltpredict2 <- predict(Pltglm2, newdata = fake_data)[,1]
Pltpredict3 <- predict(Pltglm3, newdata = fake_data)[,1]
Pltpredict4 <- predict(Pltglm4, newdata = fake_data)[,1]
Pltpredict5 <- predict(Pltglm5, newdata = fake_data)[,1]
var <- "year"
fact <- "Pop"
wrap_plots(
plot_plantule(prediction = Pltpredict1, var=var, fact=fact),
plot_plantule(prediction = Pltpredict2, var=var, fact=fact),
plot_plantule(prediction = Pltpredict3, var=var, fact=fact),
plot_plantule(prediction = Pltpredict4, var=var, fact=fact),
plot_plantule(prediction = Pltpredict5, var=var, fact=fact)
)
Growthglm1 <- fitme(growthrate ~ 1 + bs(Size0Mars,df =5,degree=3) + bs(age0,df=3,degree=3) + (Size0Mars + age0|year) + (Size0Mars|Pop),
data=growthdata,
resid.model = ~ 1)
```{r}
growthdata <- centauree_data[!is.na(centauree_data$Size1Mars), ]
growthdata <- growthdata[growthdata$Size1Mars != 0, ]
growthdata <- growthdata %>%
mutate(growthrate = Size1Mars / Size0Mars)
Growthglm1 <- fitme(growthrate ~ 1 + bs(Size0Mars,df =5,degree=3) + bs(age0,df=3,degree=3) + (Size0Mars + age0|year) + (Size0Mars|Pop),
data=growthdata,
resid.model = ~ 1)
?AIC.HLfit
?BIC
BIC
stats:::BIC.default
BIC(Growthglm1)
AIC.HLfit
get_any_IC
spaMM:::.get_info_crits
DoF
?DoF
install.packages(devtools)
install.packages("devtools")
devtools::install_github("ZheyuanLi/SplinesUtils")
library(devtools)
install.packages("shiny")
install.packages("bslib")
install.packages("shiny")
growthdata <- centauree_data[!is.na(centauree_data$Size1Mars), ]
growthdata <- growthdata[growthdata$Size1Mars != 0, ]
growthdata %>%
ggplot(aes(y = growthrate, x = Size0Mars)) +
geom_point(color = "red", size = 0.5) +
labs(title = "Relation entre le taux de croissance et la taille",
y = "Taux de croissance",
x = "Taille") +
theme_minimal()
growthdata %>%
ggplot(aes(y = Size1Mars, x = Size0Mars)) +
geom_point(color = "red", size = 0.5) +
labs(title = "Relation entre le taux de croissance et la taille",
y = "Taux de croissance",
x = "Taille") +
theme_minimal()
growthdata %>%
ggplot(aes(y = Size1Mars, x = age0)) +
geom_point(color = "red", size = 0.5) +
labs(title = "Relation entre le taux de croissance et l'age",
y = "Taux de croissance",
x = "age") +
theme_minimal()
growthdata %>%
ggplot(aes(y = Size1Mars, x = Size0Mars)) +
geom_point(color = "red", size = 0.5) +
labs(title = "Relation entre le taux de croissance et la taille",
y = "Taux de croissance",
x = "Taille") +
theme_minimal()
growthdata <- centauree_data[!is.na(centauree_data$Size1Mars), ]
growthdata <- growthdata[growthdata$Size1Mars != 0, ]
?fitme
#
Growthglm <- fitme(Size1Mars ~ 1,
data=growthdata,
resid.model = ~ 1,
verbose=c(TRACE=TRUE))
#
Growthglm <- fitme(Size1Mars ~ Size0Mars,
data=growthdata,
verbose=c(TRACE=TRUE))
Growthglm
plot(y=predict(Growthglm,fake_data)[,1],x=fake_data$Size0Mars)
#
Growthglm <- fitme(Size1Mars ~ 1 + bs(Size0Mars,df=5) +  bs(age0,degree=3,knots = 6.5) + (Size0Mars + age0|year) + (Size0Mars + age0|Pop),
data=growthdata,
verbose=c(TRACE=TRUE))
plot(y=predict(Growthglm,fake_data)[,1],x=fake_data$Size0Mars)
plot(y=predict(Growthglm,fake_data)[,1],x=fake_data$Size0Mars,type="l")
plot(y=predict(Growthglm,fake_data)[,1],x=fake_data$Size0Mars)
#
Growthglm <- fitme(Size1Mars ~ 1 + bs(Size0Mars,df=5) +  bs(age0,degree=3,knots = 6.5) + (Size0Mars + age0|year) + (Size0Mars + age0|Pop),
data=growthdata, link=log,
verbose=c(TRACE=TRUE))
#
Growthglm <- fitme(Size1Mars ~ 1 + bs(log(Size0Mars),df=5) +  bs(age0,degree=3,knots = 6.5) + (log(Size0Mars) + age0|year) + (log(Size0Mars) + age0|Pop),
data=growthdata, link=log,
verbose=c(TRACE=TRUE))
Growthglm
Growthglm
#
Growthglm <- fitme(Size1Mars ~ 1 + bs(log(Size0Mars),df=5) +  bs(age0,degree=3,knots = 6.5) + (log(Size0Mars) + age0|year) + (log(Size0Mars) + age0|Pop),
data=growthdata, family = gaussian(log),
verbose=c(TRACE=TRUE))
Growthglm
extractAIC(Growthglm)
#
Growthglm <- fitme(Size1Mars ~ 1 + bs(log(Size0Mars),df=5) +  bs(age0,degree=3,knots = 6.5) + (log(Size0Mars) + age0|year) + (log(Size0Mars) + age0|Pop),
data=growthdata, family = gaussian(log),
verbose=c(TRACE=TRUE))
#
Growthglm <- fitme(Size1Mars ~ 1 + bs(log(Size0Mars),df=5) +  bs(age0,degree=3,knots = 6.5),
data=growthdata, family = gaussian(log),
verbose=c(TRACE=TRUE))
extractAIC(Growthglm)
combi
rm(list=ls())
library(knitr)
library(spaMM)
library(tidyverse)
library(splines)
library(foreach)
library(doParallel)
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models")
centauree_data <- read.csv("donnesIPM_short.csv")
centauree_data_complet <- read.csv("donnesIPM.csv")
#Supprimer plantes dont l'age est inconnu
centauree_data <- centauree_data[!is.na(centauree_data$age0), ]
centauree_data$age1 <- ifelse(centauree_data$Stage1=="V",centauree_data$age0+1,NA)
#Forcer l'age maximal à 8
length(centauree_data$age0[centauree_data$age0 >= 8])
centauree_data$age0[centauree_data$age0 > 8] <- 8
spaMM.options(separation_max=70)
# Liste initiale des effets aléatoires
random_effects <- c("year", "Pop", "Nrw", "1", "Size0Mars", "age0", "Size0Mars + age0")
# Les parties pour combiner
r_effects <- random_effects[1:3]  # éléments : "year", "Pop", "Nrw"
f_effects <- random_effects[4:7]   # éléments "1", "Size0Mars", "age0", "Size0Mars + age0"
# Générer toutes les combinaisons (fixed effects | random effect)
ran_combinations <- sapply(f_effects, function(feffect) {
sapply(r_effects, function(reffect) {
paste0("(", feffect, "|", reffect, ")")
})
})
random_effects <- c(as.vector(ran_combinations),"(1|Pop:year)","1")
# size_effects <- c("Size0Mars","bs(Size0Mars,df=2,degree=2)","bs(Size0Mars,df=3,degree=2)","bs(Size0Mars,df=4,degree=2)",
#                    "bs(Size0Mars,df=3,degree=3)","bs(Size0Mars,df=4,degree=3)","bs(Size0Mars,df=5,degree=3)")
size_effects <- c("Size0Mars","bs(Size0Mars,df=2,degree=2)","bs(Size0Mars,df=4,degree=2)",
"bs(Size0Mars,df=3,degree=3)","bs(Size0Mars,df=5,degree=3)")
age_effects <- c("age0","bs(age0,df=2,degree=2)","bs(age0,degree=2,knots=6.5)",
"bs(age0,df=3,degree=3)","bs(age0,degree=3,knots=6.5)","bs(age0,degree=3,knots=c(1.5,6.5))")
# Fonction pour vérifier les contraintes
is_valid_combination <- function(comb) {
comb <- sort(comb)  # Trier pour vérifier l'ordre
if ("(1|year)" %in% comb && "(Size0Mars + age0|year)" %in% comb) return(FALSE)
if ("(1|year)" %in% comb && "(age0|year)" %in% comb) return(FALSE)
if ("(1|year)" %in% comb && "(Size0Mars|year)" %in% comb) return(FALSE)
if ("(Size0Mars|year)" %in% comb && "(Size0Mars + age0|year)" %in% comb) return(FALSE)
if ("(Size0Mars|year)" %in% comb && "(age0|year)" %in% comb) return(FALSE)
if ("(age0|year)" %in% comb && "(Size0Mars + age0|year)" %in% comb) return(FALSE)
if ("(1|Pop)" %in% comb && "(Size0Mars + age0|Pop)" %in% comb) return(FALSE)
if ("(1|Pop)" %in% comb && "(age0|Pop)" %in% comb) return(FALSE)
if ("(1|Pop)" %in% comb && "(Size0Mars|Pop)" %in% comb) return(FALSE)
if ("(Size0Mars|Pop)" %in% comb && "(Size0Mars + age0|Pop)" %in% comb) return(FALSE)
if ("(Size0Mars|Pop)" %in% comb && "(age0|Pop)" %in% comb) return(FALSE)
if ("(age0|Pop)" %in% comb && "(Size0Mars + age0|Pop)" %in% comb) return(FALSE)
if ("(1|Nrw)" %in% comb && "(Size0Mars + age0|Nrw)" %in% comb) return(FALSE)
if ("(1|Nrw)" %in% comb && "(age0|Nrw)" %in% comb) return(FALSE)
if ("(1|Nrw)" %in% comb && "(Size0Mars|Nrw)" %in% comb) return(FALSE)
if ("(Size0Mars|Nrw)" %in% comb && "(Size0Mars + age0|Nrw)" %in% comb) return(FALSE)
if ("(Size0Mars|Nrw)" %in% comb && "(age0|Nrw)" %in% comb) return(FALSE)
if ("(age0|Nrw)" %in% comb && "(Size0Mars + age0|Nrw)" %in% comb) return(FALSE)
if (!"1" %in% comb) return(FALSE)
return(TRUE)
}
is_valid2 <- function(comb){
if ("(1|Nrw)" %in% comb) return(FALSE)
if ("(age0|Nrw)" %in% comb) return(FALSE)
if ("(Size0Mars|Nrw)" %in% comb) return(FALSE)
if ("(Size0Mars + age0|Nrw)" %in% comb) return(FALSE)
if ("(1|Pop:year)" %in% comb) return(FALSE)
return(TRUE)
}
combinations <- list()
# Combinaisons sans "bs" ni "Size0Mars" ni "age0"
for (n in 1:length(random_effects)) {
combinations <- c(combinations, combn(random_effects, n, simplify = FALSE))
}
combi <- Filter(is_valid_combination, combinations) #250 combinaisons d'effets aléatoires
combinations <- combi
# Ajouter chaque "bs" de size et age seul et avec d'autres
for (s in size_effects) {
for (combo in combi) {
combinations <- c(combinations, list(c(s, combo)))
}
}
valid_combinations <- combinations
# 1500 combinaisons en prenant l'effets taille
for (a in age_effects) {
for (combo in combinations) {
valid_combinations <- c(valid_combinations, list(c(a, combo)))
}
}
valid2 <- Filter(is_valid2,valid_combinations)
combi_plantule <- c("1","1 + (1|year) + (1|Pop) + (1|Pop:year)","1 + (1|year) + (1|Pop)","1 + (1|year) + (1|Pop:year)","1 + (1|Pop) + (1|Pop:year)","1 + (1|year)","1 + (1|Pop)","1 + (1|Pop:year)")
combi_resvar <- c("1","log(age0)","log(Size0Mars)","log(Size0Mars) + log(age0)")
valid2
typeof(valid2)
combi_growth <- apply(valid2,"Size0Mars"="log(Size0Mars")
?gsub
combi_growth <- gsub("Size0Mars","log(Size0Mars",valid2)
combi_growth
combi_growth[1]
combi_growth[100]
typeof(combi_growth)
# Liste de chaînes de caractères
chaines <- c("Size0Mars", "Taille Size0Mars est grande", "Analyse de Size0Mars")
# Remplacement
chaines_modifiees <- gsub("Size0Mars", "log(Size0Mars)", chaines)
# Affichage du résultat
print(chaines_modifiees)
chaines_modifiees
chaines_modifiees[1]
tyepof(chaines_modifiees)
typeof(chaines_modifiees)
combi_growth <- lapply(valid2, function(x) gsub("Size0Mars", "log(Size0Mars)", x))
combi_growth
growthdata %>%
ggplot(aes(y = Size1Mars, x = Size0Mars)) +
geom_count(alpha=0.6) +
labs(title = "Relation entre le taux de croissance et la taille",
y = "Taux de croissance",
x = "Taille") +
theme_minimal()
growthdata <- centauree_data[!is.na(centauree_data$Size1Mars), ]
growthdata <- growthdata[growthdata$Size1Mars != 0, ]
growthdata %>%
ggplot(aes(y = Size1Mars, x = Size0Mars)) +
geom_count(alpha=0.6) +
labs(title = "Relation entre le taux de croissance et la taille",
y = "Taux de croissance",
x = "Taille") +
theme_minimal()
growthdata %>%
ggplot(aes(y = Size1Mars, x = Size0Mars)) +
geom_count(alpha=0.5) +
labs(title = "Relation entre le taux de croissance et la taille",
y = "Taux de croissance",
x = "Taille") +
theme_minimal()
centauree_data %>%
group_by(Size0Mars) %>%
mutate(floweringProba = sum(Flowering0, na.rm = TRUE) / n()) %>%
ggplot(aes(x = Size0Mars, y = Flowering0)) +
geom_count(alpha = 0.6) +
geom_point(aes(y = floweringProba), color = "red", size = 0.5) +
labs(title = "Relation entre la taille et la floraison",
x = "Taille",
y = "Floraison") +
ylim(0, 1) +
theme_minimal()
centauree_data %>%
group_by(age0) %>%
mutate(floweringProba = sum(Flowering0, na.rm = TRUE) / n()) %>%
ggplot(aes(x = age0, y = Flowering0)) +
geom_count(alpha = 0.6) +
geom_point(aes(y = floweringProba), color = "red", size = 0.5) +
geom_line(aes(y = floweringProba), color = "red") +
labs(title = "Relation entre la taille et la floraison",
x = "Taille",
y = "Floraison") +
ylim(0, 1) +
theme_minimal()
centauree_data %>%
group_by(Size0Mars) %>%
mutate(floweringProba = sum(Flowering0, na.rm = TRUE) / n()) %>%
ggplot(aes(x = Size0Mars, y = Flowering0)) +
geom_count(alpha = 0.6) +
geom_point(aes(y = floweringProba), color = "red") +
labs(title = "Relation entre la taille et la floraison",
x = "Taille",
y = "Floraison") +
ylim(0, 1) +
theme_minimal()
centauree_data %>%
group_by(age0) %>%
mutate(floweringProba = sum(Flowering0, na.rm = TRUE) / n()) %>%
ggplot(aes(x = age0, y = Flowering0)) +
geom_count(alpha = 0.6) +
geom_point(aes(y = floweringProba), color = "red", size = 0.5) +
geom_line(aes(y = floweringProba), color = "red") +
labs(title = "Relation entre la taille et la floraison",
x = "Taille",
y = "Floraison") +
ylim(0, 1) +
theme_minimal()
