fs0[which(FQ==0)]=median(fs0[which(FQ[-N]!=0)])
#Missing data for fecundity
aaa=array(NA,dim=c(nrow(Capitule),ncol(Capitule)))
for (i in 1:nrow(Capitule))
{
for (j in 1:ncol(Capitule))
aaa[i,j]=as.numeric(ifelse(Capitule[i,j]!="na",Capitule[i,j],NA))
}
Capitule=aaa
#fs0 for each quadrat;
captl.Q=array(NA,dim=c(length(quadrat),N))
Plantules.Q=array(NA,dim=c(length(quadrat),N))#Nbr totale des plantules
Fleurs.Q=array(NA,dim=c(length(quadrat),N))
for (j in 1:N )
{  for(i in 1:length(quadrat))
{    Plantules.Q[i,j]=sum((D.annuelle[which(donnees$Q==quadrat[i]),j])[which(Age.a[which(donnees$Q==quadrat[i]),j]==1)]) ;
Fleurs.Q[i,j]=sum(flowerQ[which(donnees$Q==quadrat[i]),j])
captl.Q[i,j]=sum(Capitule[which(donnees$Q==quadrat[i]),j])#,na.rm = T (une seule donnee manquante ds le Q -> NA pour tout le Q)
}
}
colnames(Plantules.Q)=annee
rownames(Plantules.Q)=quadrat
colnames(Fleurs.Q)=annee
rownames(Fleurs.Q)=quadrat
colnames(captl.Q)=annee
rownames(captl.Q)=quadrat
#plantules en mars/ nbr de capitules par quadrat par annee;
Plantules.Mars_Q=array(NA,dim=c(length(quadrat),N-1)) #Nbr de plantules vivantes en Mars
SeedlCptl=array(NA,dim=c(length(quadrat),N-1))
fs0.Q=array(NA,dim=c(length(quadrat),N-1))
for (i in 1:length(quadrat))
{ for (j in 1:N-1)
{
Plantules.Mars_Q[i,j]=sum((P.Mars[which(donnees$Q==quadrat[i]),j])[which(Age.a[which(donnees$Q==quadrat[i]),j]==1)])
fs0.Q[i,j]=ifelse(Fleurs.Q[i,j]==0,NA,Plantules.Q[i,j+1]/Fleurs.Q[i,j])
SeedlCptl[i,j]=ifelse(captl.Q[i,j]==0,NA,Plantules.Q[i,j+1]/captl.Q[i,j])
}
}
colnames(fs0.Q)=annee[-N]
rownames(fs0.Q)=quadrat
#Size en March
SizeDataMars=as.matrix(subset(donnees, select=  grep("M", names(donnees))))
Size0Mars=as.vector(SizeDataMars)
Size1Mars=c(as.vector(SizeDataMars[,-1]),rep(NA,nrow(SizeDataMars)))#NA for the last year
#Age in March
Age.Mars=array(NA,dim=c(nrow(D.annuelle), (ncol(D.annuelle)-1)))
Age.Mars[,1]=D.annuelle[,1]
for (i in 2:(ncol(D.annuelle)-1))
{  Age.Mars[,i]=ifelse((P.Mars[,i])!=0,rowSums(P.Mars[,1:i]),0)  }
colnames(Age.Mars)=annee[-1]
#Id for each plant
#N_ind=matrix(rep(1:nrow(Age.Mars),ncol(Age.Mars)),nrow = nrow(Age.Mars ))
#Life history for each plant from march to march
Stage0=ifelse(as.vector(P.Mars)==1,"V","D") #P.Mars : matrix with presence/absence of each individual see above
Stage1=ifelse(as.vector(P.Mars[,-1])==1,"V","D")
Stage1=c(Stage1,rep(NA,nrow(P.Mars)))# last year, fate of individuals is unknown
#survie
P.Mars=subset(D, select=  grep("M", colnames(D)))
SurvieMars=c(as.vector(P.Mars[,-1]),rep(NA,nrow(P.Mars))) # last year, fate of individuals is unknown
#Flowering
Flowering=c(as.vector(flowerQ[,-c(1,2)]),rep(NA,nrow(flowerQ)))#June(t+1)
Flowering0=as.vector(flowerQ[,-1])#June(t)
#age at t and t+1
age1=c(as.vector(Age.Mars[,-1]),rep(NA,nrow(Age.Mars)))# Age en considerant from March to March
age0=as.vector(Age.Mars)
#Nbr annuel de capitules a t+1
Cptl1=c(as.vector(Capitule[,-c(1,2)]),rep(NA,nrow(Capitule)))
#Nbr annuel de capitules a t
Cptl0=as.vector(Capitule[,-1])
AnnlCptl=NULL
for (i in 1:ncol(Capitule))
{
AnnlCptl[i]= sum(as.numeric(Capitule[,i]),na.rm = T)
}
#and finally basic information for size of the dataset
#Id for each plant
Nrw=rep(1:nrow(donnees),(N-1))
#Id plante within pop within Quadrat
Indiv=rep(donnees$Plante,(N-1))
#Id pop
Pop=rep(donnees$Pop,(N-1))
year=rep(annee[-N],each=nrow(donnees))#-> Mars t
Quadrat=rep(donnees$Q,(N-1))
debut=NULL;fin=NULL
for (i in (1:nrow(sousdonnees)))
{
debut[i]=0;fin[j]=0
debut[i]=min(which(sousdonnees[i,]!=0))
fin[i]=max(which(sousdonnees[i,]!=0))
fin[i]=ifelse(sousdonnees[i,ncol(sousdonnees)]!=0,"NA",fin[i])
}
fin[is.na(fin)]
which(is.na(fin))
fin
debut=NULL;fin=NULL
for (i in (1:nrow(sousdonnees)))
{
debut[i]=0;fin[j]=0
debut[i]=min(which(sousdonnees[i,]!=0))
fin[i]=max(which(sousdonnees[i,]!=0))
fin[i]=ifelse(sousdonnees[i,ncol(sousdonnees)]!=0,NA,fin[i])
}
is.na(fin)
which(is.na(fin))
donnees[12224,]
donnees[1224,]
sousdonnees[1224,]
debut=NULL;fin=NULL
for (i in (1:nrow(sousdonnees)))
{
debut[i]=0;fin[j]=0
debut[i]=min(which(sousdonnees[i,]!=0))
fin[i]=max(which(sousdonnees[i,]!=0))
fin[i]=ifelse(sousdonnees[i,ncol(sousdonnees)]!=0,NA,fin[i])
}
histoire=cbind(debut,fin)
write.csv(histoire, "histoire.csv")
rm(list=ls())
library(popbio)
library(psych) #function geometric.mean
setwd("~/Documents/Recherches/centaurea/demographie/manipulation/testFecondite")
#Donnees
#Fichier classique sans les colonnes A, B etc.. et Pop mais avec Quadrat
donnees1=read.csv("Enferet1.csv", header=T, dec=',', sep=" ")
donnees2=read.csv("Enferet2.csv", header=T, dec=',', sep=" ")
donnees3=read.csv("Peyral.csv", header=T, dec=',', sep=" ")
donnees4=read.csv("Cruzade.csv", header=T, dec=',', sep=" ")
donnees5=read.csv("Auzils.csv", header=T, dec=',', sep=" ")
donnees6=read.csv("Portes.csv", header=T, dec=',', sep=" ")
fulldonnees=rbind(donnees1,donnees2,donnees3,donnees4,donnees5,donnees6)
#Date d'installation des quadrats => sert pour modifier le statut/age des plantes présentes à l'installation des #quadrats
j94=list(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,35)
s94=list(23,24,25,26,27)
s95=list(37,38)
s98=list(41,42,43,44)
m95=list(28,29,30,31,32,33,34,36)
d95=list(39,40)
d99=list(45)
d20=list(32,80,81,95)
View(fulldonnees)
donnees=fulldonnees[,1:159]
year=c(1994:2016) # a modifier en fonction de l annee
#Pas de temps de Juin t à Juin t+1
#donc les releves Sept/Dec/Mars/Juin font partie de la même cohorte
cohorte=NULL;fleur=NULL
for (i in year[-1]) {cohorte=c(cohorte,paste("C",substr(i,3,4), sep=""))}
for (i in year) { fleur=c(fleur,paste("F",substr(i,3,4), sep=""))}
suiteV=c("C94",rep(cohorte,each=4))
suiteF=c("idPlante", "Plante", "Q", year)
suiteC=c("idPlante","Plante", "Q", "C94", cohorte)
#rename col
rer=grep("J", names(donnees))
j=1
for (i in rer) {colnames(donnees)[i+1]=fleur[j]; j=j+1}
View(donnees)
#Fichier capitule
#nb of seed head
Capitule=subset(donnees,select = c(grep("F",names(donnees))))
#remove any information different from F
for (i in 1:ncol(Capitule))
{Capitule[!grepl("F", Capitule[,i]),i]=0}
for (i in 1:ncol(Capitule))
{ for (j in 1:nrow(Capitule))
{Capitule[j,i]=ifelse(gsub("F","\\1",Capitule[j,i])!="",as.numeric(gsub("F","\\1",Capitule[j,i])),NA)
Capitule[j,i]=as.numeric(Capitule[j,i])
}
Capitule[,i]=as.numeric(Capitule[,i])}
#flowering individuals = F
for (j in 1:length(year)) {donnees[grep("F",donnees[,fleur[j]]),fleur[j]]="F"}
View(Capitule)
View(donnees)
#suppression des colonnes avec header Plante, Quadrat et REM:
sousdonnees=subset(donnees, select= - grep("P", names(donnees)))
sousdonnees=subset(sousdonnees, select= - grep("Q", names(sousdonnees)))
sousdonnees=subset(sousdonnees, select= - grep("R", names(sousdonnees)))
vegetative=subset(sousdonnees, select= - grep("F", names(sousdonnees)))
D=ifelse(vegetative!=0,1,0) #Modification du tableau en 0 et 1 MORT/VIVANT
View(D)
#donnees de reproduction (plantes presentes ds les quadrats)
flowerQ=subset(donnees, select= grep("F",names (donnees)))
flowerQ=ifelse(flowerQ=="F",1,0)
##### Statut des plantes par cohorte (vivante/Morte)
j=unique(suiteV)
D.annuelle=array(NA,dim=c(nrow(D), (length(j))))
for (i in 1:length(j))
{  D.annuelle[,i]=rowSums(subset(D, select=(grep(j[i], suiteV))))  }
D.annuelle=ifelse(D.annuelle!=0,1,0)
Age.a=array(NA,dim=c(nrow(D), ncol(D.annuelle)))
Age.a[,1]=D.annuelle[,1]
for (i in 2:ncol(D.annuelle))
{  Age.a[,i]=ifelse((D.annuelle[,i])!=0,rowSums(D.annuelle[,1:i]),0)  }
colnames(Age.a)=j
View(Age.a)
View(donnees)
Age.a[donnees$J94!=0,]=NA
#Plantes présentes en S94 => age = NA
achanger <- which(donnees$S94 !=0 & is.element(donnees$Q,s94))
Age.a[achanger,]=NA
#Plantes présentes en S95 => age = NA
achanger <- which(donnees$S95 !=0 & is.element(donnees$Q,s95))
Age.a[achanger,]=NA
#Plantes présentes en S98 => age = NA
achanger <- which(donnees$S98 !=0 & is.element(donnees$Q,s98))
Age.a[achanger,]=NA
#Plantes présentes en m95 => age = NA
achanger <- which(donnees$M95 !=0 & is.element(donnees$Q,m95))
Age.a[achanger,]=NA
#Plantes présentes en d95 => age = NA
achanger <- which(donnees$D95 !=0 & is.element(donnees$Q,d95))
Age.a[achanger,]=NA
#Plantes présentes en d99 => age = NA
achanger <- which(donnees$D99 !=0 & is.element(donnees$Q,d99))
Age.a[achanger,]=NA
#Plantes en fleurs presentes dans les quadrats
FQ=colSums(flowerQ)
#Calcul de fs0 (meme methode qu'Helene Freville)
#Plantes presentes en Juin uniquement et age=1
P.Juin=subset(D, select=  grep("J", colnames(D)))
Pltul.Juin=rep(NA,ncol(P.Juin))
for (i in 1:ncol(P.Juin) )
{  Pltul.Juin[i]=sum((P.Juin[,i])[which(Age.a[,i]==1)])  }
#A13=fs0=nbr de plantules en juin (t+1) / nbr de plantes en fleurs (t)
fs0=Pltul.Juin[-1]/FQ[-length(year)]
#Lorsque le nbr de plantes en fleurs est nul on prend la mediane:
fs0[which(FQ[-length(year)]==0)]=median(fs0[which(FQ[-length(year)]!=0)])
#Plantes en fleurs presentes dans les quadrats
FQ=colSums(flowerQ)
#Calcul de fs0 (meme methode qu'Helene Freville)
#Plantes presentes en Juin uniquement et age=1
P.Juin=subset(D, select=  grep("J", colnames(D)))
Pltul.Juin=rep(NA,ncol(P.Juin))
for (i in 1:ncol(P.Juin) )
{  Pltul.Juin[i]=sum((P.Juin[,i])[which(Age.a[,i]==1)])  }
#A13=fs0=nbr de plantules en juin (t+1) / nbr de plantes en fleurs (t)
fs0=Pltul.Juin[-1]/FQ[-length(year)]
#Lorsque le nbr de plantes en fleurs est nul on prend la mediane:
fs0[which(FQ[-length(year)]==0)]=median(fs0[which(FQ[-length(year)]!=0)])
#calcul de f et s0 separemment
#Nombre de plantules par COHORTE (vues au cours de l'annee et pas forcement vivantes en juin)
Nbr.plantules=rep(NA,ncol(D.annuelle))
for (i in 1:ncol(D.annuelle) )
{  Nbr.plantules[i]=sum((D.annuelle[,i])[which(Age.a[,i]==1)])  }
f=Nbr.plantules[-1]/FQ[-length(year)]
#Lorsque le nbr de plantes en fleurs est nul on prend la mediane:
f[which(FQ[-length(year)]==0)]=median(f[which(FQ[-length(year)]!=0)])
s0=Pltul.Juin[-1]/Nbr.plantules[-1]
s0[which(Nbr.plantules[-1]==0)]=median(s0[which(s0[-1]!=0)])
fecondite=data.frame(fs0,f, s0)
#Valeur globale : moyenne geometrique, les zeros sont elimines
f_moy=geometric.mean(f[f!=0])
s0_moy=geometric.mean(s0[s0!=0])
A13=f_moy*s0_moy
fecon_moy=data.frame(A13,f_moy,s0_moy)
print("Nombre de plantes en fleurs")
print(FQ)
print("Nbre de plantules observées en JUIN")
print(Pltul.Juin)
print("Nbre totale de plantules observées entre SEPTEMBRE ET JUIN")
print(Nbr.plantules)
print("Fecondite")
print(fecon_moy)
quadrat=unique(donnees$Q)
#Missing data for fecundity
aaa=array(NA,dim=c(nrow(Capitule),ncol(Capitule)))
for (i in 1:nrow(Capitule))
{
for (j in 1:ncol(Capitule))
aaa[i,j]=as.numeric(ifelse(Capitule[i,j]!="na",Capitule[i,j],NA))
}
Capitule=aaa
#fs0 for each quadrat;
captl.Q=array(NA,dim=c(length(quadrat),length(year))) #Nbr total de capitules
Plantules.Q=array(NA,dim=c(length(quadrat),length(year)))#Nbr total de plantules
Fleurs.Q=array(NA,dim=c(length(quadrat),length(year))) #Nbr total de plantes en fleur
for (j in 1:length(year))
{for(i in 1:length(quadrat))
{Plantules.Q[i,j]=sum((D.annuelle[which(donnees$Q==quadrat[i]),j])[which(Age.a[which(donnees$Q==quadrat[i]),j]==1)]) ;
Fleurs.Q[i,j]=sum(flowerQ[which(donnees$Q==quadrat[i]),j])
captl.Q[i,j]=sum(Capitule[which(donnees$Q==quadrat[i]),j])#,na.rm = T (une seule donnee manquante ds le Q -> NA pour tout le Q)
}
}
colnames(Plantules.Q)=year
rownames(Plantules.Q)=quadrat
colnames(Fleurs.Q)=year
rownames(Fleurs.Q)=quadrat
colnames(captl.Q)=year
rownames(captl.Q)=quadrat
#plantules en juin/ nbr de capitules par quadrat par annee;
Plantules.Juin_Q=array(NA,dim=c(length(quadrat),length(year))) #Nbr de plantules vivantes en juin
fs0.Q=array(NA,dim=c(length(quadrat),length(year)))
for (i in 1:length(quadrat))
{ for (j in 1:(length(year)))
{Plantules.Juin_Q[i,j]=sum((P.Juin[which(donnees$Q==quadrat[i]),j])[which(Age.a[which(donnees$Q==quadrat[i]),j]==1)])
}
}
print("Nbre total de plantules")
print(colSums(Plantules.Q))
print("Plantules en Juin")
print(colSums(Plantules.Juin_Q))
Estb1 <- colSums(Plantules.Q)[-1]/colSums(captl.Q, na.rm=T)[-length(year)] #Nbre de plantules par capitule
Estb2 <- colSums(Plantules.Juin_Q)[-1]/colSums(captl.Q, na.rm=T)[-length(year)] #Nbre de plantules par capitule
RecRatePool=median( Estb1[which(!is.na(Estb1) & Estb1!=Inf )] )
print("Nbr total de plantules/Capitule")
print(RecRatePool)
RecRatePool=median( Estb2[which(!is.na(Estb2) & Estb2!=Inf )] )
print("Nbr de plantules en Juin/capitule")
print(RecRatePool)
print("Nbre de plantules en Juin par plante en fleurs")
print(A13)
print("Nbre de plantules en Juin par capitule")
print(RecRatePool)
print("Nbre de capitules par plante en fleur")
print(mean(colSums(captl.Q, na.rm=T)/FQ))
print("les produits sont pas trop différents")
print(RecRatePool*mean(colSums(captl.Q, na.rm=T)/FQ))
rm(list=ls())
setwd("~/Documents/Recherches/centaurea/demographie/manipulation/IPM/formattage")
annee=1994:2022 # a modifier en fonction de l annee
fleur=NULL
for (i in annee) { fleur=c(fleur,paste("F",substr(i,3,4), sep=""))}
rename_col=function(mydata) {
rer=grep("J", names(mydata))
j=1
for (i in rer) {colnames(mydata)[i+1]=fleur[j]; j=j+1}
mydata=subset(mydata, select=-c(grep("R",names(mydata))))
lastcolumn=ncol(mydata)
labonnecolonne=(which(names(mydata)==fleur[length(fleur)]))
mydata=subset(mydata, select=-c(labonnecolonne+1:ncol(mydata)))
return(mydata)
}
donnees1=read.csv2("Enferet1.csv", sep=" ", dec=',')
donnees2=read.csv2("Enferet2.csv", sep=" ", dec=',')
donnees3=read.csv2("Auzils.csv", sep=" ", dec=',')
donnees4=read.csv2("Cruzade.csv", sep=" ", dec=',')
donnees5=read.csv2("Peyral.csv", sep=" ", dec=',')
donnees6=read.csv2("Portes.csv", sep=" ", dec=',')
donnees1=rename_col(donnees1);donnees1$Pop="E1"
donnees2=rename_col(donnees2);donnees2$Pop="E2"
donnees3=rename_col(donnees3);donnees3$Pop="Au"
donnees4=rename_col(donnees4);donnees4$Pop="Cr"
donnees5=rename_col(donnees5);donnees5$Pop="Pe"
donnees6=rename_col(donnees6);donnees6$Pop="Po"
donnees=rbind(donnees6,donnees3,donnees4,donnees5,donnees1,donnees2)
#remove plants without data
#remove header Plante et POP:
vegetative=subset(donnees, select= - grep("P", names(donnees)))
vegetative=subset(vegetative, select= - grep("Q", names(vegetative)))
vegetative=subset(vegetative, select= - grep("F", names(vegetative)))
vegetative=ifelse(vegetative!=0,1,0) #Modification du tableau en 0 et 1
donnees=donnees[rowSums(vegetative)>0,]
rm(list=ls() [ls() %in%  c("donnees1", "donnees2", "donnees3","donnees4","donnees5","donnees6", "vegetative") ]) #keep a single dataframe
donnees$IdPlante=seq(1:nrow(donnees))
donnees=subset(donnees, select=c(IdPlante, Pop, Plante, Q, J94:(ncol(donnees)-2))) #reorder columns
#Fichier capitule
#nb of seed head
Capitule=subset(donnees,select = c(grep("F",names(donnees))))
#remove any information different from F
for (i in 1:ncol(Capitule))
{Capitule[!grepl("F", Capitule[,i]),i]=0}
for (i in 1:ncol(Capitule))
{ for (j in 1:nrow(Capitule))
{Capitule[j,i]=ifelse(gsub("F","\\1",Capitule[j,i])!="",as.numeric(gsub("F","\\1",Capitule[j,i])),NA)
Capitule[j,i]=as.numeric(Capitule[j,i])    }
Capitule[,i]=as.numeric(Capitule[,i])}
#to check if information !=F present
#rer=NULL; for (i in 1: ncol(Capitule)){rer=c(rer,unique(Capitule[,i]))}
#which(Capitule ==PATTERN, arr.in=T)
#Flowering = F
for (i in 1:ncol(donnees)) {
donnees[grep("F", donnees[,i]),i]="F"}
summary(donnees)
annee=annee+1
N=length(annee)
#Cohort
cohorte=NULL
for (i in annee[-N]) { cohorte=c(cohorte,paste("C",substr(i,3,4), sep=""))}
lastcohorte=paste("C",substr(annee[N],3,4), sep="")
suiteV=c(rep(cohorte,each=4),lastcohorte)
quadrat=unique(donnees$Q)
sousdonnees=subset(donnees, select= - grep("P", names(donnees)));
sousdonnees=subset(sousdonnees, select= - grep("Q", names(sousdonnees)));
#vegetative data
sousdonnees=subset(sousdonnees, select= - grep("F", names(sousdonnees)));
D=ifelse(sousdonnees!=0,1,0) #Modification du tableau en 0 et 1:
View(D)
sousD <- subset(D, select= - grep("J", names(D)))
View(sousD)
View(sousD)
sousD <- subset(D, select= grep("J", names(D)))
sousD <- subset(sousdonnees, select= grep("J", names(sousdonnees)))
View(sousD)
View(D)
summary(D)
names(D)
D <- as.data.frame(D)
names(D)
sousD <- subset(D, select= grep("J", names(D)))
View(sousD)
sousD <- data.frame(donnees$Q,sousD)
rer <- by(sousD,donnees$Q, nrow)
rer
sousD[1,]
sousD[,1]
sousD[,2]
by(sousD[,2],donnees$Q,sum)
by(sousD[,3],donnees$Q,sum)
? by
j <- 1
for (i in names(sous$D))
{rer <- subset(sousD, select= grep(i, names(sousD)))
essai[j] <- tapplu(rer,donnees$Q, sum)
j <- j+1 }
j <- 1
for (i in names(sousD))
{rer <- subset(sousD, select= grep(i, names(sousD)))
essai[j] <- tapply(rer,donnees$Q, sum)
j <- j+1 }
j <- 1
essai <-NULL
for (i in names(sousD))
{rer <- subset(sousD, select= grep(i, names(sousD)))
essai[j] <- tapply(rer,donnees$Q, sum)
j <- j+1 }
warnings()
essai
tapply(sousD[,3], donnees$Q, sum)
j <- 1
essai <-NULL
for (i in 2:30)
{essai[j] <- tapply(rer[,i],donnees$Q, sum)
j <- j+1 }
j <- 1
essai <-NULL
for (i in 2:30)
{essai[j] <- tapply(sousD[,i],donnees$Q, sum)
j <- j+1 }
essai
j
length(essai)
j <- 1
essai <-NULL
for (i in 2:30)
{essai[j,52] <- tapply(sousD[,i],donnees$Q, sum)
j <- j+1 }
tapply(sousD[,i],donnees$Q, sum)
length(tapply(sousD[,i],donnees$Q, sum))
rer=tapply(sousD[,i],donnees$Q, sum)
class(rer)
rer
j <- 1
essai <-NULL
for (i in 2:30)
{essai[j,52] <- t(tapply(sousD[,i],donnees$Q, sum) )
j <- j+1 }
? array
j <- 1
essai <-array(NA, c(29,52))
for (i in 2:30)
{essai[j,52] <- t(tapply(sousD[,i],donnees$Q, sum) )
j <- j+1 }
essai
essai <-array(NA, c(52,29))
for (i in 2:30)
{essai[52,i-1] <- t(tapply(sousD[,i],donnees$Q, sum) )
}
essai <-array(NA, c(52,29))
for (i in 2:30)
{essai[52,(i-1)] <- tapply(sousD[,i],donnees$Q, sum)  }
rer=tapply(sousD[,i],donnees$Q, sum)
rer
essai[52,1] <-rer
essai[52,1] <-t(rer)
essai[52,1] <-t(t(rer))
length(rer)
essai[1,52] <-rer
essai[52,1] <-rer
dim(essai)
View(essai)
essai <-array(NA, c(29,52))
essai[52,1] <-rer
essai[1,52] <-rer
View(essai)
essai[1,] <-rer
essai <-array(NA, c(29,52))
for (i in 2:30)
{essai[(i-1),] <- tapply(sousD[,i],donnees$Q, sum)  }
essai <- ifelse(essai!=0, 1,0)
View(essai)
rowsum(essai)
rowSums(essai)
View(essai)
colSums(essai)
View(donnees)
View(essai)
essai <-array(NA, c(29,52))
for (i in 2:30)
{essai[(i-1),] <- tapply(sousD[,i],donnees$Q, sum)  }
View(essai)
essai <-array(NA, c(29,52))
names(essai) <- unique(donnees$Q)
View(essai)
colnames(essai) <- unique(donnees$Q)
View(essai)
colnames(essai) <- sort(unique(donnees$Q))
View(essai)
for (i in 2:30)
{essai[(i-1),] <- tapply(sousD[,i],donnees$Q, sum)}
#on remplace les valeurs par 1-0
essai <- ifelse(essai!=0, 1,0)
final=colSums(essai)
final
sort(final)
