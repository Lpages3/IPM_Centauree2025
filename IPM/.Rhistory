geom_line()+
theme_bw()
ggplot(aes(x=Annee,y=lambda))+
geom_point()+
geom_line()+
theme_bw()
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(lambda=mean(E1,E2,Cr,Au,Pe,Po))
View(lamMPM)
lam
View(lam)
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po))
lamMPM <- GrowthRateMPM %>%
filter(year != 1994) %>%
group_by(year) %>%
summarize(lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po))
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(year = Annee,
lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po))
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(year = Annee,
lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po))
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(year = Annee,
lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po)) %>%
pull(Anne)
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(year = Annee,
lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po)) %>%
pull(Annee)
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(year = Annee,
lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po)) %>%
remove(Annee)
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(year = Annee,
lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po)) %>%
remove(Annee)
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(year = Annee,
lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po))
View(lamMPM)
lamMPM <- GrowthRateMPM %>%
filter(Annee != 1994) %>%
group_by(Annee) %>%
summarize(year = Annee,
lambdaMPM=mean(E1,E2,Cr,Au,Pe,Po)) %>%
select(!Annee)
lam %>%Anneelam %>%
left_join(lamMPM,by=year)
lam  %>%
left_join(lamMPM,by=year)
lam  %>%
join_by(lamMPM,by=year)
?join_by
lam  %>%
left_join(lamMPM, by = year==year)
lam  %>%
left_join(lamMPM, by = join_by(year==year))
lam %>%
left_join(lamMPM, by = join_by(year==year)) %>%
ggplot(aes(x=year,lambda))+
geom_abline(intercept=1,slope=0)+
geom_smooth(color="pink",se=FALSE)+
geom_point(color="red")+
geom_line(color="red")+
geom_point(aes(y=lambdaMPM))+
geom_line(aes(y=lambdaMPM))+
theme_bw()+
ylim(0.2,1.8)
lam %>%
left_join(lamMPM, by = join_by(year==year)) %>%
ggplot(aes(x=year,lambda))+
geom_abline(intercept=1,slope=0)+
geom_point(color="red")+
geom_line(color="red")+
geom_point(aes(y=lambdaMPM))+
geom_line(aes(y=lambdaMPM))+
theme_bw()+
ylim(0.2,1.8)
lam %>%
left_join(lamMPM, by = join_by(year==year)) %>%
ggplot(aes(x=year,lambda))+
geom_abline(intercept=1,slope=0)+
geom_point(color="red")+
geom_line(color="red")+
geom_point(aes(y=lambdaMPM))+
geom_line(aes(y=lambdaMPM))+
theme_bw()+
ylim(0.2,2.5)
lam %>%
left_join(lamMPM, by = join_by(year==year)) %>%
ggplot(aes(x=year,lambda))+
geom_abline(intercept=1,slope=0,type="dots")+
geom_point(color="red")+
geom_line(color="red")+
geom_point(aes(y=lambdaMPM))+
geom_line(aes(y=lambdaMPM))+
theme_bw()+
ylim(0.2,2.5)
?geom_abline
?geom_line
?aesthetics
?Aesthetics
lam %>%
left_join(lamMPM, by = join_by(year==year)) %>%
ggplot(aes(x=year,lambda))+
geom_abline(intercept=1,slope=0,linetype=2)+
geom_point(color="red")+
geom_line(color="red")+
geom_point(aes(y=lambdaMPM))+
geom_line(aes(y=lambdaMPM))+
theme_bw()+
ylim(0.2,2.5)
lam %>%
left_join(lamMPM, by = join_by(year==year)) %>%
ggplot(aes(x=year,lambda))+
geom_abline(intercept=1,slope=0,linetype=2)+
geom_point(color="red")+
geom_line(color="red")+
geom_point(aes(y=lambdaMPM))+
geom_line(aes(y=lambdaMPM))+
theme_bw()+
labs(title = "MPM en noir ; IPM en rouge")+
ylim(0.2,2.5)
rm(list=ls())
library(knitr)
library(spaMM)
library(tidyverse)
library(popbio)
library(splines)
setwd("/media/loic/Commun/0Travail/Stage 2025 ISEM/Models/IPM")
centauree_data <- read.csv("donnesIPM_short.csv")
centauree_data_complet <- read.csv("donnesIPM.csv")
MatrixDim <- 50
RecrRate <- 0.407 #recruitment rate
#Forcer l'age maximal à 8
AgeMax <- 8
centauree_data$age1 <- ifelse(centauree_data$Stage1=="V",centauree_data$age0+1,NA)
centauree_data$age0[centauree_data$age0 > AgeMax] <- AgeMax
centauree_data$age1[centauree_data$age1 > AgeMax] <- AgeMax
spaMM.options(separation_max=70)
weightAgeFlrPool=NULL
for ( a in 1:AgeMax ) {
weightAgeFlrPool[a]= nrow(centauree_data[which(centauree_data$age0==a & centauree_data$Flowering0==1),])
}
plantule_data <- centauree_data_complet[centauree_data_complet$age0==1,] %>%
filter(!is.na(age0)) %>%
filter(Size0Mars!=0)
n_plt <- length(plantule_data$Nrw)
sizeSeedl <- unique(plantule_data$Size0Mars[order(plantule_data$Size0Mars)])
Width <-NULL
Den <- NULL
for (i in 1:length(sizeSeedl)){
# Number of observations for each size
Width[i] <- length(unique(plantule_data$Nrw[plantule_data$Size0Mars==sizeSeedl[i]]))
# Frequency of each size
Den[i] <- Width[i]/n_plt
}
Width
Den
dens <- rep(Den,Width)
gg1=lm(log(1/dens)~rep(sizeSeedl,Width))
densSeedl2=function(y,intervalle){
miny=min(y)
maxy=max(y)
SeedlgSize=exp(log(coef(gg1)[2])-y*coef(gg1)[2])/(exp(-coef(gg1)[2]*(miny-intervalle/2))-exp(-coef(gg1)[2]*(maxy+intervalle/2)))
return(SeedlgSize)
}
## Creation of fake data
AgeMax <- 8
year <- 1995:2022
Pop <- c("Po","Au","Pe","E1","E2","Cr")
taille_range <- seq(0.5, 25, by = 0.5)
age_range <- 1:AgeMax
#
# fake_data <- expand.grid(
#   year = annees,
#   Pop = populations,
#   Size0Mars = NA,
#   age0 = NA)
Pop=gl(6,length(year),labels = Pop)
rer=data.frame(Pop,year)
rer$Index=1:(length(year)*6)
fake_data=do.call("rbind", replicate(MatrixDim, rer, simplify = FALSE))
fake_data=fake_data[order(fake_data$Index),]
fake_data$Size0Mars=NA
fake_data$age0=NA
rm(rer, Pop, year)
load("ModelsAIC")
growthdata <- centauree_data[!is.na(centauree_data$Size1Mars), ]
growthdata <- growthdata[growthdata$Size1Mars != 0, ]
growthdata <- growthdata[!is.na(growthdata$age0),]
annees <- 1995:2022
populations <- c("Po","Au","Pe","E1","E2","Cr")
#Fecundity
numbofcap <- function(x, a) {
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = x,
age0 = a)
mu <- exp(predict(Cptlglm1, fake_data))
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean)
nbcap <- ifelse(mu2$V1>=0,mu2$V1,0)
return(matrix(nbcap, length(x), length(x), byrow = T))
}
#Survival Probability for age 1
sx01 <- function(x,a) {
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = x,
age0 = a)
mu <- predict(Survglm11, fake_data, allow.new.levels = T)
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean)
return(mu2$V1)
}
#Survival Probability for age > 1
sx02 <- function(x, a) {
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = x,
age0 = a)
mu <- predict(Survglm12, fake_data, allow.new.levels = T)
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean)
return(mu2$V1)
}
#Flowering Probability
#Beta = will be used to modify the intercept of the flowering function
#obs_beta = observed value
#extract Beta0
load("obs_beta")
load("se_obs_beta")
#Flowering function for The survival-growth kernel
flr0 <- function(x, a, Beta) {
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- plogis(predict(Flowglm1, newdata = fake_data, allow.new.levels = T, type = "link") + Beta)
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean)
return(mu2$V1)
}
#Flowering function for fecundity fyx0 - same function the difference is in the format of the output
flr1 <- function(x, a, Beta) {
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- plogis(predict(Flowglm1, fake_data, allow.new.levels = T, type = "link") + Beta)
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean)
return(matrix(mu2$V1, MatrixDim, MatrixDim, byrow = T))
}
# Growthglm1 <- fitme(log(Size1Mars) ~ 1 + poly(log(Size0Mars),4), data=growthdata, resid.model = ~ 1)
#
# Growthglm1 <- fitme(sqrt(Size1Mars) ~ 1 + poly(Size0Mars,4) + poly(age0,3) + (Size0Mars|year) + (Size0Mars|Pop),
#                     data=growthdata,
#                     resid.model =~log(Size0Mars))
sizesObserved=sort(unique(centauree_data$Size0Mars, na.rm=T))
SD=NULL
for (i in 1:length(sizesObserved)){
SD[i]=sd(centauree_data$Size1Mars[which(centauree_data$Size1Mars !=0 & centauree_data$Size0Mars==(sizesObserved[i]))])}
SD=SD[which(SD!=0)]
sizesObserved=sizesObserved[which(SD!=0)]
SDlm=lm(SD ~ sizesObserved)
# growthdata <- centauree_data %>%
#   filter(!is.na(Size1Mars),Size1Mars!=0,!is.na(age0)) %>%
#   mutate(logSize1Mars = log(Size1Mars),
#          logSize0Mars = log(Size0Mars))
# sizesObserved=sort(unique(growthdata$logSize0Mars, na.rm=T))
# SD=NULL
# for (i in 1:length(sizesObserved)){
#   SD[i] <- sd(growthdata$logSize1Mars[growthdata$logSize0Mars==(sizesObserved[i])])
#   }
# SDlm=lm(SD ~ sizesObserved)
#Growth function
Gyx0 <- function (y, x, a) { # Méthode midpoint
fake_data$age0 <- a #Fixe l'age
fake_data$Size0Mars <- unique(x) #Fixe la taille
mu <- predict(Growthglm1, fake_data, allow.new.levels = T, residVar=TRUE) #Prédit les log(taille) à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des log(taille)t+1
M <- matrix(mu2$V1, length(x), length(y), byrow = T)
usd <- predict(SDlm, data.frame(sizesObserved=x))
return(dnorm(log(y), mean = M, sd = usd)) #Proba qu'un individu soit de taille y à t+1 sachant la moyenne et la variance
}
Gyx1 <- function(ysup,yinf,x,a){ # Croissance CDF log
yinf[1] <- -Inf
ysup[length(ysup)] <- Inf
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- exp(predict(Growthglm12, fake_data, allow.new.levels = T)) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(0.27795)
usd <- sqrt(exp(-0.8872301-0.4646620*log(unique(x))))
cdf.sup <- mapply(pnorm, mean = mu2$V1, sd = usd, MoreArgs = list(q=ysup))
cdf.inf <- mapply(pnorm, mean = mu2$V1, sd = usd, MoreArgs = list(q=yinf))
return(cdf.sup - cdf.inf)}
Gyx2 <- function(ysup,yinf,x,a){ # Croissance CDF sans log
yinf[1] <- -Inf
ysup[length(ysup)] <- Inf
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
cdf.sup <- mapply(pnorm, mean = mu2$V1, sd = usd, MoreArgs = list(q=ysup))
cdf.inf <- mapply(pnorm, mean = mu2$V1, sd = usd, MoreArgs = list(q=yinf))
return(cdf.sup - cdf.inf)}
#Seedling size density
densSeedl <- function(ysup, yinf) {
yinf[1] <- -Inf
ysup[length(ysup)] <- Inf
mu <- predict(Pltglm1, newdata = fake_data)[, 1]
shape <- 1 / Pltglm1$phi
mu <- mean(mu)
scale <- mu * Pltglm1$phi
cdf.sup <- pgamma(ysup, shape = shape, scale = scale)
cdf.inf <- pgamma(yinf, shape = shape, scale = scale)
return(cdf.sup - cdf.inf)
}
#Combine fecundity and flowering probability
fyx02 <- function(x , a, Estbl, Beta = 0) {
#flowering probability:
p.flow <- flr1(x, a, Beta)
#number of capitula per flowering plant
n.captl <- numbofcap(x, a)
#survival probability
sx0 <- ifelse(a==1,sx01,sx02)
p.surv <- sx0(x,a)
Fyx0 <- p.flow * n.captl * Estbl * p.surv
return(Fyx0)
}
fyx0 <- function(y, x , a, Estbl, Beta = 0, intervalle) {
#flowering probability:
p.flow <- flr1(x, a, Beta)
#number of capitula per flowering plant
n.captl <- numbofcap(x, a)
#Seedlings Size distribution
ProporSeedlSize <- densSeedl2(y,intervalle)
#survival probability
sx0 <- ifelse(a==1,sx01,sx02)
p.surv <- sx0(x,a)
Fyx0 <- ifelse((p.flow * n.captl * Estbl * ProporSeedlSize) >= 0,
p.flow * n.captl * Estbl * ProporSeedlSize * p.surv,
0)
return(Fyx0)
}
n.size <- 9
age <- 2
estbl <- 0.4912
Beta <- 0
K.fnc0 <- function(age, n.size, estbl, Beta=0){
minsize <-  0.5
maxsize <-  25
maxsize1 <- 15
h <-  (maxsize - minsize) / n.size
h1 <-  (maxsize1 - minsize) / n.size
b = minsize + c(0:n.size) * h
#sizes for an individual of age a
#midpoint
ymid.a = 0.5 * (b[1:n.size] + b[2:(n.size + 1)])
#intervals
yI.a <- matrix(nrow = n.size, ncol = 2)
for (i in 1:n.size){
yI.a[i,1] <- b[i]
yI.a[i,2] <- b[i+1]
}
b1 = minsize + c(0:n.size) * h1
#sizes for an individual of age 1
#midpoint
ymid.1 = 0.5 * (b1[1:n.size] + b1[2:(n.size + 1)])
#intervals
yI.1 <- matrix(nrow = n.size, ncol = 2)
for (i in 1:n.size){
yI.1[i,1] <- b1[i]
yI.1[i,2] <- b1[i+1]
}
if(age==1){ymid.a <- ymid.1 ; yI.a <- yI.1; h <- h1}
#The growth kernel
G <- Gyx2(ysup=yI.a[,2], yinf=yI.a[,1], x=ymid.a, a=age)
#The survival-growth kernel #remove flowering plants since they died
sx0 <- ifelse(age==1,sx01,sx02)
S_flr <- sx0(ymid.a,age)*(1-flr0(ymid.a,age,Beta))
Ps <- sweep(G, MARGIN=2, S_flr, '*')
P <- matrix(Ps, nrow=n.size)
#Fecundity
ProporSeedlSize <- densSeedl(ysup=yI.1[,2],yinf=yI.1[,1])
feco <- fyx02(x = ymid.a, a = age, Estbl = estbl, Beta = Beta)
Fec <- sweep(feco, MARGIN=1, ProporSeedlSize, '*')
IPMk <- P + Fec
return(list(M=IPMk,Pk=P,Fk=Fec))
}
super_matrix = function(Beta_test){
Pk <- matrix(data = NA, nrow = MatrixDim, ncol = MatrixDim)
Fk <- matrix(data = NA, nrow = MatrixDim, ncol = MatrixDim)
Mk <- matrix(data = NA, nrow = MatrixDim, ncol = MatrixDim)
Kernals <- array(data = 0, dim = c(AgeMax, 3, MatrixDim, MatrixDim))
GlobMatrIPM <- array(0, dim = c((AgeMax * MatrixDim), (AgeMax * MatrixDim)))
for (a in (1:(AgeMax - 1))){
Kls <- K.fnc0(a, MatrixDim, RecrRate, Beta_test)
Kernals[a, 1, , ] <- Kls$M
Kernals[a, 2, , ] <- Kls$Pk
Kernals[a, 3, , ] <- Kls$Fk
# print(lambda(Kernals[a, 1, , ]))
debut <- (a - 1) * MatrixDim + 1
fin <- debut + (MatrixDim - 1)
GlobMatrIPM[1:MatrixDim, (debut:fin)] <- Kls$Fk
GlobMatrIPM[((fin + 1):(fin + MatrixDim)), (debut:fin)] <- Kls$Pk
}
Kls <- K.fnc0(AgeMax, MatrixDim, RecrRate, Beta_test)
Kernals[AgeMax, 1, , ] <- Kls$M
Kernals[AgeMax, 2, , ] <- Kls$Pk
Kernals[AgeMax, 3, , ] <- Kls$Fk
# print(lambda(Kernals[a,1,,]))
debut <- (AgeMax - 1) * MatrixDim + 1
fin <- debut + (MatrixDim - 1)
GlobMatrIPM[1:MatrixDim, (debut:fin)] <- Kls$Fk
GlobMatrIPM[(debut:fin), (debut:fin)] <- Kls$Pk
return(lambda(GlobMatrIPM))
}
obs_lambda <- super_matrix(0) # growthrate values reported in table 1
print(obs_lambda)
mean_size <- mean(centauree_data_complet$Size0Mars[which(centauree_data_complet$Flowering0 == 1)])
sd_size <- sd(centauree_data_complet$Size0Mars[which(centauree_data_complet$Flowering0 == 1)])
print(mean_size)
print(sd_size)
mean_age <- mean(centauree_data_complet$age0[which(centauree_data_complet$Flowering0 == 1)], na.rm = T)
sd_age <- sd(centauree_data_complet$age0[which(centauree_data_complet$Flowering0 == 1)], na.rm = T)
print(mean_age)
print(sd_age)
Beta_test <- 0L
Pk <- matrix(data = NA, nrow = MatrixDim, ncol = MatrixDim)
Fk <- matrix(data = NA, nrow = MatrixDim, ncol = MatrixDim)
Mk <- matrix(data = NA, nrow = MatrixDim, ncol = MatrixDim)
Kernals <- array(data = 0, dim = c(AgeMax, 3, MatrixDim, MatrixDim))
GlobMatrIPM <- array(0, dim = c((AgeMax * MatrixDim), (AgeMax * MatrixDim)))
a <- 1
Kls <- K.fnc0(a, MatrixDim, RecrRate, Beta_test)
Kernals[a, 1, , ] <- Kls$M
Kernals[a, 2, , ] <- Kls$Pk
Kernals[a, 3, , ] <- Kls$Fk
# print(lambda(Kernals[a, 1, , ]))
debut <- (a - 1) * MatrixDim + 1
fin <- debut + (MatrixDim - 1)
GlobMatrIPM[1:MatrixDim, (debut:fin)] <- Kls$Fk
GlobMatrIPM[((fin + 1):(fin + MatrixDim)), (debut:fin)] <- Kls$Pk
GlobMatrIPM
Kernals
Fk
Pk
Kls$M
print(Kls$M)
plot(Kls$M)
plot(Kls$Fk)
plot(Kls$Pk)
plot(Kls$M)
plot(Kls$Fk)
plot(Kls$Pk)
plot(Kls$M)
plot(Kls$M[1,])
plot(Kls$M[2,])
plot(Kls$M[3,])
plot(Kls$M[9,])
plot(Kls$M[19,])
plot(Kls$M[29,])
plot(Kls$M[49,])
plot(Kls$M[,1])
plot(Kls$M[,10])
plot(Kls$M[,20])
plot(Kls$M[,30])
plot(Kls$M[,40])
plot(Kls$M[,50])
eigen.analysis(Kls$M)
AA <- eigen.analysis(Kls$M)
AA$lambda1
AA$stable.stage
plot(AA$stable.stage)
AA$repro.value
plot(AA$repro.value)
plot(AA$stable.stage[-length(AA$stable.stage)])
sum(AA$stable.stage[-length(AA$stable.stage)])
sum(AA$stable.stage)
195*12
