# G <- mapply(Gyx1, ysup = yI.a[,2], yinf = yI.a[,1], MoreArgs = list(x=ymid.a, a=age))
G <- mapply(Gyx2,x=ymid.a, MoreArgs = list(ysup = yI.a[,2], yinf = yI.a[,1], a=age))
G
sum(G)
sum(G[1,])
sum(G[,1])
n.size <- 50
age <- 2
estbl <- 0.4912
Beta <- 0
K.fnc0 <- function(age, n.size, estbl, Beta=0){
minsize <-  0.5
maxsize <-  25
maxsize1 <- 15
h <-  (maxsize - minsize) / n.size
h1 <-  (maxsize1 - minsize) / n.size
b = minsize + c(0:n.size) * h
#sizes for an individual of age a
#midpoint
ymid.a = 0.5 * (b[1:n.size] + b[2:(n.size + 1)])
#intervals
yI.a <- matrix(nrow = n.size, ncol = 2)
for (i in 1:n.size){
yI.a[i,1] <- b[i]
yI.a[i,2] <- b[i+1]
}
b1 = minsize + c(0:n.size) * h1
#sizes for an individual of age 1
#midpoint
ymid.1 = 0.5 * (b1[1:n.size] + b1[2:(n.size + 1)])
#intervals
yI.1 <- matrix(nrow = n.size, ncol = 2)
for (i in 1:n.size){
yI.1[i,1] <- b1[i]
yI.1[i,2] <- b1[i+1]
}
if(age==1){ymid.a <- ymid.1 ; yI.a <- yI.1; h <- h1}
#The growth kernel
G <- mapply(Gyx1, ysup = yI.a[,2], yinf = yI.a[,1], MoreArgs = list(x=ymid.a, a=age))
# G <- mapply(Gyx2,x=ymid.a, MoreArgs = list(ysup = yI.a[,2], yinf = yI.a[,1], a=age))
# G1 <- outer(yI.a[,1], ymid.a, Gyx2, a=age, h=h)
# G2 <- Gyx1bis(yI.a[,1],ymid.a,a=a,h=h)
#The survival-growth kernel #remove flowering plants since they died
sx0 <- ifelse(age==1,sx01,sx02)
S_flr <- sx0(ymid.a,age)*(1-flr0(ymid.a,age,Beta))
Ps <- sweep(G, MARGIN=2, S_flr, '*')
P <- matrix(Ps, nrow=n.size)
#Fecundity
ProporSeedlSize <- densSeedl(ysup=yI.1[,2],yinf=yI.1[,1])
feco <- fyx02(x = ymid.a, a = age, Estbl = estbl, Beta = Beta)
Fec <- sweep(feco, MARGIN=1, ProporSeedlSize, '*')
IPMk <- P + Fec
return(list(M=IPMk,Pk=P,Fk=Fec))
}
obs_lambda <- super_matrix(0) # growthrate values reported in table 1
print(obs_lambda)
n.size <- 50
age <- 2
estbl <- 0.4912
Beta <- 0
K.fnc0 <- function(age, n.size, estbl, Beta=0){
minsize <-  0.5
maxsize <-  25
maxsize1 <- 15
h <-  (maxsize - minsize) / n.size
h1 <-  (maxsize1 - minsize) / n.size
b = minsize + c(0:n.size) * h
#sizes for an individual of age a
#midpoint
ymid.a = 0.5 * (b[1:n.size] + b[2:(n.size + 1)])
#intervals
yI.a <- matrix(nrow = n.size, ncol = 2)
for (i in 1:n.size){
yI.a[i,1] <- b[i]
yI.a[i,2] <- b[i+1]
}
b1 = minsize + c(0:n.size) * h1
#sizes for an individual of age 1
#midpoint
ymid.1 = 0.5 * (b1[1:n.size] + b1[2:(n.size + 1)])
#intervals
yI.1 <- matrix(nrow = n.size, ncol = 2)
for (i in 1:n.size){
yI.1[i,1] <- b1[i]
yI.1[i,2] <- b1[i+1]
}
if(age==1){ymid.a <- ymid.1 ; yI.a <- yI.1; h <- h1}
#The growth kernel
# G <- mapply(Gyx1, ysup = yI.a[,2], yinf = yI.a[,1], MoreArgs = list(x=ymid.a, a=age))
# G <- mapply(Gyx2,x=ymid.a, MoreArgs = list(ysup = yI.a[,2], yinf = yI.a[,1], a=age))
G <- outer(yI.a[,1], ymid.a, Gyx2, a=age, h=h)
# G2 <- Gyx1bis(yI.a[,1],ymid.a,a=a,h=h)
#The survival-growth kernel #remove flowering plants since they died
sx0 <- ifelse(age==1,sx01,sx02)
S_flr <- sx0(ymid.a,age)*(1-flr0(ymid.a,age,Beta))
Ps <- sweep(G, MARGIN=2, S_flr, '*')
P <- matrix(Ps, nrow=n.size)
#Fecundity
ProporSeedlSize <- densSeedl(ysup=yI.1[,2],yinf=yI.1[,1])
feco <- fyx02(x = ymid.a, a = age, Estbl = estbl, Beta = Beta)
Fec <- sweep(feco, MARGIN=1, ProporSeedlSize, '*')
IPMk <- P + Fec
return(list(M=IPMk,Pk=P,Fk=Fec))
}
obs_lambda <- super_matrix(0) # growthrate values reported in table 1
Gyx1bis <- function(yinf,x,a,h){ # Méthode CDF-h yt+1 ~ yt
ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
ysup <- ifelse(ysup>=ifelse(a==1,15,25),Inf,ysup)
fake_data$age0 <- a #Fixe l'age
fake_data$Size0Mars <- unique(x) #Fixe la taille
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
cdf.sup <- pnorm(ysup, mu2$V1, usd)
cdf.inf <- pnorm(yinf, mu2$V1, usd)
return(cdf.sup - cdf.inf)
}
Gyx1 <- function(ysup,yinf,x,a){ # Méthode CDF yt+1 ~ yt
yinf <- ifelse(yinf==0.5,-Inf,yinf)
ysup <- ifelse(ysup==ifelse(a==1,15,25),Inf,ysup)
fake_data$age0 <- a #Fixe l'age
fake_data$Size0Mars <- unique(x) #Fixe la taille
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
# usd <- predict(SDlm, data.frame(sizesObserved=x))
cdf.sup <- pnorm(ysup, mu2$V1, usd)
cdf.inf <- pnorm(yinf, mu2$V1, usd)
return(cdf.sup - cdf.inf)
}
Growthglm1
G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
G
sum(G)
# G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
G <- Gyx1bis(yI.a[,1],ymid.a,a=a,h=h)
G
# G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
G <- mapply(Gyx1bis, yinf=yI.a[,1], ymid.a, a=a, h=h)
sum(G)
# G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
G <- mapply(Gyx1bis, yinf=yI.a[,1], ymid.a, MoreArgs=list(a=a, h=h))
# G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
G <- mapply(Gyx1bis, yinf=yI.a[,1], x=ymid.a, MoreArgs=list(a=a, h=h))
G
debug(Gyx0)
#Growth function
Gyx0 <- function (y, x, a) { # Méthode midpoint
fake_data$age0 <- a #Fixe l'age
fake_data$Size0Mars <- unique(x) #Fixe la taille
mu <- predict(Growthglm1, fake_data, allow.new.levels = T, residVar=TRUE) #Prédit les log(taille) à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des log(taille)t+1
M <- matrix(mu2$V1, length(x), length(y), byrow = T)
usd <- predict(SDlm, data.frame(sizesObserved=x))
return(dnorm(log(y), mean = M, sd = usd)) #Proba qu'un individu soit de taille y à t+1 sachant la moyenne et la variance
}
undebug(Gyx0)
debug(Gyx1)
ysup
ysup = yI.a[,2]
yinf = yI.a[,1]
x=ymid.a
a=age
Gyx1(yinf = yinf,ysup = ysup,x=x,a=a)
yinf
ysup
mu
mu2
x
cdf.inf
mu2
undebug(Gyx1)
debug(Gyx2)
Gyx2(ysup,yinf,x,a)
ysup
yinf
mu2
mu2
undebug(Gyx2)
?mapply
mapply(rep, 1:4, 4:1)
1:4
4:1
mapply(rep, times = 1:4, MoreArgs = list(x = 42))
mappl(Gyx2,ysup=ysup,yinf=yinf,x=x,a=a)
mapply(Gyx2,ysup=ysup,yinf=yinf,x=x,a=a)
mapply(Gyx2,ysup=ysup,yinf=yinf,MoreArgs=list(x=x,a=a))
mapply(rep, times = 1:4, MoreArgs=list(x = 4:1))
Gyx1bis
yinf
x
#The growth kernel
# G <- mapply(Gyx1, ysup = yI.a[,2], yinf = yI.a[,1], MoreArgs = list(x=ymid.a, a=age))
# G <- mapply(Gyx2,x=ymid.a, MoreArgs = list(ysup = yI.a[,2], yinf = yI.a[,1], a=age))
G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
G
dim(G)
sum(G)
sum(G[1,])
sum(G[,1])
G[1,]
G[,1]
G[,1]==G[,2]
yI.a[,1]
ymid.a
?agregate
?aggregate
debug(Gyx1bis)
Gyx1bis(yinf,x,a,h)
ysup
Gyx1bis(yinf,x,a,h)
Gyx1bis <- function(yinf,x,a,h){ # Méthode CDF-h yt+1 ~ yt
ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
if(a==1){ysup <- ifelse(ysup==15,Inf,ysup)} else{ysup <- ifelse(ysup==25,Inf,ysup)}
fake_data$age0 <- a #Fixe l'age
fake_data$Size0Mars <- unique(x) #Fixe la taille
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
cdf.sup <- pnorm(ysup, mu2$V1, usd)
cdf.inf <- pnorm(yinf, mu2$V1, usd)
return(cdf.sup - cdf.inf)
}
Gyx1bis(yinf,x,a,h)
debug(Gyx1bis)
Gyx1bis(yinf,x,a,h)
ysup
yinf
mu
undebug(Gyx1bis)
debug(Gyx2)
Gyx2(ysup,yinf,x,a)
ysup
yinf
mu2
M <- matrix(mu2$V1, MatrixDim, MatrixDim, byrow = T)
M
M[1,$]
M[1,]
M[,1]
M[,2]
outer(ysup,mu2$V1,pnorm,sd=usd)
view(outer(ysup,mu2$V1,pnorm,sd=usd))
G1 <- outer(ysup,mu2$V1,pnorm,sd=usd)
G1 <- outer(yinf,mu2$V1,pnorm,sd=usd)
G2 <- outer(ysup,mu2$V1,pnorm,sd=usd)
view(G2-G1)
G <- G2-G1
sum(G)
sum(G[1,])
sum(G[,1])
sum(G[,2])
sum(G[,3])
sum(G[,10])
plot(G[,10])
plot(G[,15])
plot(G[,25])
plot(G[,35])
plot(G[,45])
plot(G[,1])
plot(G[,2])
plot(G[,3])
plot(G[,4])
undebug(Gyx2)
Gyx2 <- function(ysup,yinf,x,a){
# ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
if(a==1){ysup <- ifelse(ysup==15,Inf,ysup)} else{ysup <- ifelse(ysup==25,Inf,ysup)}
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
# usd <- predict(SDlm, data.frame(sizesObserved=x))
cdf.sup <- pnorm(ysup, mu2$V1, usd)
cdf.inf <- pnorm(yinf, mu2$V1, usd)
cdf.sup <- outer(ysup,mu2$V1,pnorm,sd=usd)
cdf.inf <- outer(yinf,mu2$V1,pnorm,sd=usd)
return(cdf.sup - cdf.inf)}
Gyx2(1,0.5,1,a)
Gyx2(1,0.5,2,a)
Gyx2(1,0.5,3,a)
Gyx2(1,0.5,c(1,2),a)
Gyx2(1,0.5,c(1,2,3),a)
Gyx2(c(1,1.5),c(0.5,1),1,a)
Gyx2(c(1,1.5),c(0.5,1),c(0.5,1),a)
debug(Gyx2)
Gyx2(c(1,1.5),c(0.5,1),c(0.5,1),1)
Gyx2 <- function(ysup,yinf,x,a){
# ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
if(a==1){ysup <- ifelse(ysup==15,Inf,ysup)} else{ysup <- ifelse(ysup==25,Inf,ysup)}
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
# usd <- predict(SDlm, data.frame(sizesObserved=x))
cdf.sup <- pnorm(ysup, mu2$V1, usd)
cdf.inf <- pnorm(yinf, mu2$V1, usd)
cdf.sup <- outer(ysup, mu2$V1, pnorm, sd=usd)
cdf.inf <- outer(yinf, mu2$V1, pnorm, sd=usd)
return(cdf.sup - cdf.inf)}
Gyx2(c(1,1.5),c(0.5,1),c(0.5,1),1)
debug(Gyx2)
Gyx2(c(1,1.5),c(0.5,1),c(0.5,1),1)
yinf
ysup
mu2
usd
x
cdf.inf
cdf.sup
cdf.inf
cdf.sup
mapply(pnorm,y=ysup,mean=mu2$V1,MoreArgs = list(sd=usd))
mapply(pnorm,q=ysup,mean=mu2$V1,MoreArgs = list(sd=usd))
cdf.sup
outer(ysup, mu2$V1, pnorm, sd=usd)
#Seedling size density
densSeedl <- function(ysup, yinf) {
yinf <- ifelse(yinf == 0.5, -Inf, yinf)
ysup <- ifelse(ysup == 15, Inf, ysup)
sortie <- predict(Pltglm1, newdata = fake_data)[, 1]
shape <- 1 / Pltglm1$phi
mu <- mean(sortie)
scale <- mu * Pltglm1$phi
cdf.sup <- pgamma(ysup, shape = shape, scale = scale)
cdf.inf <- pgamma(yinf, shape = shape, scale = scale)
return(cdf.sup - cdf.inf)
}
#Combine fecundity and flowering probability
fyx02 <- function(x , a, Estbl, Beta = 0) {
#flowering probability:
p.flow <- flr1(x, a, Beta)
#number of capitula per flowering plant
n.captl <- numbofcap(x, a)
Fyx0 <- p.flow * n.captl * Estbl
return(Fyx0)
}
outer(ysup, mu2$V1, pnorm, sd=usd)
undebug(Gyx2)
#The growth kernel
# G <- mapply(Gyx1, ysup = yI.a[,2], yinf = yI.a[,1], MoreArgs = list(x=ymid.a, a=age))
# G <- mapply(Gyx2,x=ymid.a, MoreArgs = list(ysup = yI.a[,2], yinf = yI.a[,1], a=age))
# G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
# G <- mapply(Gyx1bis, yinf=yI.a[,1], x=ymid.a, MoreArgs=list(a=a, h=h))
G <- Gyx2(ysup=yI.a[,2], yinf=yI.a[,1], x=ymis.a, a=age)
#The growth kernel
# G <- mapply(Gyx1, ysup = yI.a[,2], yinf = yI.a[,1], MoreArgs = list(x=ymid.a, a=age))
# G <- mapply(Gyx2,x=ymid.a, MoreArgs = list(ysup = yI.a[,2], yinf = yI.a[,1], a=age))
# G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
# G <- mapply(Gyx1bis, yinf=yI.a[,1], x=ymid.a, MoreArgs=list(a=a, h=h))
G <- Gyx2(ysup=yI.a[,2], yinf=yI.a[,1], x=ymid.a, a=age)
G
sum(G
)
Gyx2 <- function(ysup,yinf,x,a){
# ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
if(a==1){ysup <- ifelse(ysup==15,Inf,ysup)}; else{ysup <- ifelse(ysup==25,Inf,ysup)}
Gyx2 <- function(ysup,yinf,x,a){
# ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
if(a==1){ysup <- ifelse(ysup==15,Inf,ysup)}
if(a>1) {ysup <- ifelse(ysup==25,Inf,ysup)}
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
# usd <- predict(SDlm, data.frame(sizesObserved=x))
cdf.sup <- pnorm(ysup, mu2$V1, usd)
cdf.inf <- pnorm(yinf, mu2$V1, usd)
cdf.sup <- outer(ysup, mu2$V1, pnorm, sd=usd)
cdf.inf <- outer(yinf, mu2$V1, pnorm, sd=usd)
return(cdf.sup - cdf.inf)}
#The growth kernel
# G <- mapply(Gyx1, ysup = yI.a[,2], yinf = yI.a[,1], MoreArgs = list(x=ymid.a, a=age))
# G <- mapply(Gyx2,x=ymid.a, MoreArgs = list(ysup = yI.a[,2], yinf = yI.a[,1], a=age))
# G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
# G <- mapply(Gyx1bis, yinf=yI.a[,1], x=ymid.a, MoreArgs=list(a=a, h=h))
G <- Gyx2(ysup=yI.a[,2], yinf=yI.a[,1], x=ymid.a, a=age)
sum(G)
ysup
a
yinf
# ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
yinf
if(a==1){ysup <- ifelse(ysup==15,Inf,ysup)}
ysup
if(a>1) {ysup <- ifelse(ysup==25,Inf,ysup)}
ysup
Gyx2 <- function(ysup,yinf,x,a){
# ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
if(a==1){ysup <- ifelse(ysup==15,Inf,ysup)}
if(a>1){ysup <- ifelse(ysup==25,Inf,ysup)}
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
# usd <- predict(SDlm, data.frame(sizesObserved=x))
cdf.sup <- pnorm(ysup, mu2$V1, usd)
cdf.inf <- pnorm(yinf, mu2$V1, usd)
cdf.sup <- outer(ysup, mu2$V1, pnorm, sd=usd)
cdf.inf <- outer(yinf, mu2$V1, pnorm, sd=usd)
return(cdf.sup - cdf.inf)}
#The growth kernel
# G <- mapply(Gyx1, ysup = yI.a[,2], yinf = yI.a[,1], MoreArgs = list(x=ymid.a, a=age))
# G <- mapply(Gyx2,x=ymid.a, MoreArgs = list(ysup = yI.a[,2], yinf = yI.a[,1], a=age))
# G <- outer(yI.a[,1], ymid.a, Gyx1bis, a=age, h=h)
# G <- mapply(Gyx1bis, yinf=yI.a[,1], x=ymid.a, MoreArgs=list(a=a, h=h))
G <- Gyx2(ysup=yI.a[,2], yinf=yI.a[,1], x=ymid.a, a=age)
sum(G)
sum(G[,1])
sum(G[,2])
G[,2]
Gyx2(c(1,1.5),c(0.5,1),c(0.5,1),1)
Gyx2(c(1,Inf),c(-Inf,1),c(0.5,1),1)
sum(Gyx2(c(1,Inf),c(-Inf,1),c(0.5,1),1))
sum(Gyx2(c(1,Inf),c(-Inf,1),c(0.5,1),1)[1,])
sum(Gyx2(c(1,Inf),c(-Inf,1),c(0.5,1),1)[,1])
mu2
debug(Gyx2)
Gyx2(c(1,1.5),c(0.5,1),c(0.5,1),1)
Gyx2 <- function(ysup,yinf,x,a){
# ysup <- yinf+h
yinf <- ifelse(yinf==0.5,-Inf,yinf)
if(a==1){ysup <- ifelse(ysup==15,Inf,ysup)}
if(a>1){ysup <- ifelse(ysup==25,Inf,ysup)}
fake_data <- expand.grid(
year = annees,
Pop = populations,
Size0Mars = unique(x),
age0 = a)
mu <- predict(Growthglm2, fake_data, allow.new.levels = T) #Prédit les taille à t+1 possibles
mu2 <- aggregate(mu, list(fake_data$Size0Mars), mean) #Calcule la moyenne des taillet+1
usd <- sqrt(exp(1.0462608+0.5367287*log(unique(x))))
#   usd <- predict(SDlm, data.frame(sizesObserved=x))
#   cdf.sup <- pnorm(ysup, mu2$V1, usd)
#   cdf.inf <- pnorm(yinf, mu2$V1, usd)
cdf.sup <- outer(ysup, mu2$V1, pnorm, sd=usd)
cdf.inf <- outer(yinf, mu2$V1, pnorm, sd=usd)
return(cdf.sup - cdf.inf)}
debug(Gyx2)
Gyx2(c(1,1.5),c(0.5,1),c(0.5,1),1)
ysup
yinf
undebug(Gyx2)
ysup
debug(Gyx2)
Gyx2(c(1,Inf),c(0.5,1),c(0.5,1),1)
*
ysup
yinf
mu2
undebug(Gyx2)
pnorm(1,2.96526)
pnorm(-Inf,2.96526)
pnorm(1,2.96526,sqrt(exp(1.0462608+0.5367287*log(unique(0.5)))))
pnorm(1,3.22937,sqrt(exp(1.0462608+0.5367287*log(unique(1)))))
pnorm(1,2.96526,sqrt(exp(1.0462608+0.5367287*log(unique(0.5)))))
sqrt(exp(1.0462608+0.5367287*log(unique(x))))
sqrt(exp(1.0462608+0.5367287*log(unique(1))))
Gyx2(c(1,Inf),c(0.5,1),c(0.5,1),1)
G <- Gyx2(c(1,Inf),c(0.5,1),c(0.5,1),1)
sum(G)
sum(G[,1])
sum(G[,2])
pnorm(1,2.96526,sqrt(exp(1.0462608+0.5367287*log(unique(0.5)))))
pnorm(1,2.96526,sqrt(exp(1.0462608+0.5367287*log(unique(1)))))
pnorm(Inf,2.96526,sqrt(exp(1.0462608+0.5367287*log(unique(1)))))
pnorm(-Inf,2.96526,sqrt(exp(1.0462608+0.5367287*log(unique(1)))))
debug(Gyx2)
G <- Gyx2(c(1,Inf),c(0.5,1),c(0.5,1),1)
mu2
sd
usd
mu2
cdf.inf
cdf.sup
pnorm(1,mu2$V1[1],usd[1])
1-pnorm(1,mu2$V1[1],usd[1])
cdf.sup - cdf.inf
pnorm(1,mu2$V1[2],usd[2])
pnorm(0.5,mu2$V1[2],usd[2])
pnorm(0.5,mu2$V1[1],usd[1])
cdf.inf
cdf.sup
mapply(pnorm,q=ysup,mean=mu2$V1,sd=usd)
mapply(pnorm,q=ysup,mean=mu2$V1,MoreArgs=list(sd=usd))
mapply(pnorm,q=yinf,mean=mu2$V1,MoreArgs=list(sd=usd))
mapply(pnorm,q=ysup,mean=mu2$V1,MoreArgs=list(sd=usd))-mapply(pnorm,q=yinf,mean=mu2$V1,MoreArgs=list(sd=usd))
sum(mapply(pnorm,q=ysup,mean=mu2$V1,MoreArgs=list(sd=usd))-mapply(pnorm,q=yinf,mean=mu2$V1,MoreArgs=list(sd=usd)))
undebug(Gyx2)
